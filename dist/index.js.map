{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/tool.js","webpack:///./src/index.js","webpack:///./src/polyfill.js","webpack:///./src/upload.js","webpack:///./src/slice.js","webpack:///./src/http.js","webpack:///./src/queue.send.js","webpack:///./src/getMd5.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Tool","keys","maxPos","length","str","charAt","Math","floor","random","Date","getTime","fileName","split","pop","query","reg","obj","exec","RegExp","$1","$2","origin","target","prop","_typeof","toString","deepClone","_upload","window","FormData","Error","SimpleUploadSliceFile","UploadFile","assign","varArgs","TypeError","to","index","arguments","nextSource","nextKey","writable","configurable","options","_classCallCheck","this","chunkSile","url","formData","formSleceFile","headers","callBack","sliceTryFreq","isSendCheckMd5","delay","datas","files","file","nodeType","jQuery","FileList","File","slice","Slice","totalSize","size","fileKey","makeRandom","slices","getSlice","primordial","_this","allField","progressCallObj","md5CallObj","allSuccessResult","_loop","singleFile","singleLoadedTotal","chunkLength","loadedTotalSize","field","md5","_getMd2","default","success","res","is","getFileMd5","md5Header","push","upload-file-id","suffix","getFileNameSuffix","Http","checkMd5Result","resp","isCheckMd5Request","upload-file-md5","JSON","stringify","send","progress","complete","error","upload-size-range","start","end","upload-total-size","upload-total-slice","upload-now-order","_progress","singleSuccess","response","parse","k","splice","allSuccess","e","sliceSuccess","console","log","tryFreqError","errorMsg","fileData","fieldName","order","_compute","ceil","blob","nowUploadKey","queueSend","queue","trySend","maxTrySend","cancelSend","httpStatus","lastHttpStatus","removeField","fn","xhr","XMLHttpRequest","test","open","append","setRequestHeader","onreadystatechange","readyState","status","sendSuccess","responseText","isSendLoading","upload","onprogress","evt","lengthComputable","loaded","setTimeout","filter","item","hex_chr","md5cycle","x","a","b","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","state","substring","match","parseInt","rhex","j","hex","join","toUtf8","unescape","encodeURIComponent","hexToBinaryString","bytes","substr","String","fromCharCode","apply","SparkMD5","reset","ArrayBuffer","clamp","val","max","min","from","num","targetArray","sourceArray","byteLength","begin","undefined","Uint8Array","set","appendBinary","contents","_buff","_length","_hash","raw","ret","buff","_finish","getState","hash","setState","destroy","hashBinary","content","arr","first","second","returnUInt8Array","result","buffer","subarray","utf8Str2ArrayBuffer","md51_array","md5Str","blobSlice","mozSlice","webkitSlice","chunkSize","chunks","currentChunk","spark","fileReader","FileReader","loadNext","readAsArrayBuffer","onload","md5_progress","msg","onerror"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\r\n\r\n\r\nclass Tool {\r\n    /**\r\n     * @description 生成随机字符串\r\n     * @return {String}\r\n     * */\r\n    static makeRandom() {\r\n        let keys = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let maxPos = keys.length;\r\n        let str = '';\r\n        for (let i = 0; i < 20; i++) {\r\n            str += keys.charAt(Math.floor(Math.random() * maxPos));\r\n        }\r\n        return str + new Date().getTime();\r\n\r\n    }\r\n\r\n    /**\r\n     * @description 获取文件名后缀\r\n     * @return {String} 文件名称\r\n     * @return {String}\r\n     * */\r\n    static getFileNameSuffix(fileName) {\r\n        return fileName.split('.').pop();\r\n    }\r\n    /**\r\n     * @description 将queryString解析成对象\r\n     * @return {String} queryString\r\n     * @return {Object} 转换之后的对象\r\n     * */\r\n    static queryStringToObj(query) {\r\n        let reg = /([^=&\\s]+)[=\\s]*([^&\\s]*)/g;\r\n        let obj = {};\r\n        while (reg.exec(query)) {\r\n            obj[RegExp.$1] = RegExp.$2;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    static deepClone(origin, target) {\r\n        for (let prop in origin) {\r\n            if (origin.hasOwnProperty(prop)) {\r\n                //判断是原始值还是引用值 并且不包含null(null其实是原始值，但是typeof返回是'object')\r\n                if (typeof origin[prop] === 'object' && Object.prototype.toString.call(origin[prop]) !== '[object Null]') {\r\n                    //判断原始值是对象还是数组\r\n                    target[prop] = Object.prototype.toString.call(origin[prop]) === '[object Array]' ? [] : {};\r\n                    Tool.deepClone(origin[prop], target[prop]);\r\n                } else {\r\n                    //string null undefined number\r\n                    target[prop] = origin[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\r\n\r\n\r\nexport default Tool;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './polyfill';\r\nimport UploadFile from './upload';\r\n\r\nif (!window.FormData) {\r\n    throw new Error('FormData is not defined ; tips : Please use IE10 or more or other mainstream browsers');\r\n}\r\nwindow.SimpleUploadSliceFile = UploadFile;\r\n\r\n\r\n\r\n","/**\r\n * @description  解决IE不认识 Object.assign 的问题\r\n * @description2 采用自 https://developer.mozilla.org/zh-CN/\r\n * */\r\n\r\nif (typeof Object.assign != 'function') {\r\n    // Must be writable: true, enumerable: false, configurable: true\r\n    Object.defineProperty(Object, \"assign\", {\r\n        value: function assign(target, varArgs) { // .length of function is 2\r\n            'use strict';\r\n            if (target == null) { // TypeError if undefined or null\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n\r\n            var to = Object(target);\r\n\r\n            for (var index = 1; index < arguments.length; index++) {\r\n                var nextSource = arguments[index];\r\n\r\n                if (nextSource != null) { // Skip over if undefined or null\r\n                    for (var nextKey in nextSource) {\r\n                        // Avoid bugs when hasOwnProperty is shadowed\r\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                            to[nextKey] = nextSource[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return to;\r\n        },\r\n        writable: true,\r\n        configurable: true\r\n    });\r\n}\r\n","import Slice from './slice';\r\n\r\nimport Tool from './tool';\r\n\r\nimport Http from './http';\r\n\r\nimport getFileMd5 from './getMd5';\r\n\r\n\r\nclass UploadFile {\r\n\r\n    constructor(options) {\r\n\r\n        // 切片的大小数\r\n        this.chunkSile = options.chunkSile || 10;\r\n        // 请求地址\r\n        this.url = options.url || 'http://127.0.0.1';\r\n        // 请求数据\r\n        this.formData = {};\r\n        // 请求文件\r\n        this.formSleceFile = [];\r\n\r\n        // 请求头\r\n        this.headers = {};\r\n        // 回调\r\n        this.callBack = options.callBack || {};\r\n        // 一个切片连续上传几次失败直接断开整个文件上传\r\n        this.sliceTryFreq = options.sliceTryFreq || 10;\r\n        // 是否最后发送MD5值进行校验\r\n        this.isSendCheckMd5 = options.isSendCheckMd5 || false;\r\n\r\n        this.delay = options.delay || 0;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求头\r\n     * @param headers {Object} 请求头对象\r\n     * @return {Object} this\r\n     * */\r\n    appendHeader(headers) {\r\n        Object.assign(this.headers, headers);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求携带数据\r\n     * @param datas {Object}\r\n     * @return object this\r\n     * */\r\n    appendData(datas) {\r\n        Object.assign(this.formData, datas);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求文件数据\r\n     * @param files {Object}\r\n     * @return object this\r\n     * */\r\n    appendFile(files) {\r\n\r\n        // 将文件集合切片放入本对象fromFile\r\n        for (let key in files) {\r\n            let file = null;\r\n            if (!files[key]) {\r\n                throw new Error('No correct file was selected');\r\n            } else if (files[key].nodeType === 1) {\r\n                file = files[key]['files'][0];\r\n            } else if (typeof jQuery !== 'undefined' && files[key] instanceof jQuery) {\r\n                file = files[key][0]['files'][0];\r\n            } else if (files[key] instanceof FileList) {\r\n                file = files[key][0];\r\n            } else if (files[key] instanceof File) {\r\n                file = files[key];\r\n            }\r\n\r\n            // 实例化切片对象，将文件进行切片、计算等操作\r\n            let slice = new Slice({\r\n                chunkSile: this.chunkSile,\r\n                file: file\r\n            });\r\n\r\n\r\n            // 将文件所有切片存入切片集合\r\n            this.formSleceFile[key] = {\r\n                totalSize: file.size,\r\n                fileName: file['name'],\r\n                // fileKey: Tool.makeRandom() + '.' + Tool.getFileNameSuffix(files[key]['name']),\r\n                fileKey: Tool.makeRandom(),\r\n                slices: slice.getSlice(),\r\n                primordial: file\r\n            };\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    send() {\r\n\r\n        // #a001 上传的所有字段放在数组里面\r\n        let allField = Object.keys(this.formSleceFile);\r\n        // #b001 将进度回调的所有字段名称、回调格式定好\r\n        let progressCallObj = {\r\n            /* fieldName: {\r\n                 totalSize: 0,\r\n                 fileName: '',\r\n                 fileKey: '',\r\n                 chunkLength: 0\r\n             }\r\n             */\r\n        };\r\n\r\n        // #c001 将获取成功的MD5回到\r\n        let md5CallObj = {};\r\n\r\n        // #d001 将每次单文件上传完成的响应存起来\r\n        let allSuccessResult = [];\r\n        // 多文件\r\n        for (let key in this.formSleceFile) {\r\n            // 单个文件\r\n            let singleFile = this.formSleceFile[key],\r\n                // 单个文件总共已经上传的字节\r\n                singleLoadedTotal = 0,\r\n                // 临时记录本次与上次的相隔的大小\r\n                s = 0;\r\n            // 进度回调参数\r\n            progressCallObj[key] = {\r\n                totalSize: singleFile['totalSize'],\r\n                fileName: singleFile['fileName'],\r\n                fileKey: singleFile['fileKey'],\r\n                chunkLength: singleFile['slices'].length,\r\n                loadedTotalSize: 0\r\n            };\r\n            // 获取文件MD5\r\n            md5CallObj[key] = {\r\n                field: key,\r\n                fileKey: singleFile['fileKey'],\r\n                fileName: singleFile['fileName'],\r\n                md5: null\r\n            };\r\n            if (this.isSendCheckMd5) {\r\n                getFileMd5({\r\n                    file: singleFile['primordial'],\r\n                    success: (res) => {\r\n                        // console.log('md5md5md5md5');\r\n                        md5CallObj[key].md5 = res.md5;\r\n                        // 全部获取成功才进行回调\r\n                        let is = true;\r\n                        for (let key in md5CallObj) {\r\n                            if (!md5CallObj[key].md5) {\r\n                                is = false;\r\n                            }\r\n                        }\r\n                        if (is) {\r\n                            this.callBack.getFileMd5 &&\r\n                            this.callBack.getFileMd5(md5CallObj);\r\n                            // 发送md5校验\r\n\r\n                            let md5Header = [];\r\n                            for (let key in md5CallObj) {\r\n                                md5Header.push({\r\n                                    'upload-file-id': md5CallObj[key]['fileKey'],\r\n                                    md5: md5CallObj[key]['md5'],\r\n                                    suffix: Tool.getFileNameSuffix(md5CallObj[key]['fileName'])\r\n                                });\r\n                            }\r\n                            new Http({\r\n                                callBack: {\r\n                                    checkMd5Result: (resp) => {\r\n                                        this.callBack.checkMd5Result &&\r\n                                        this.callBack.checkMd5Result(resp);\r\n                                    }\r\n                                },\r\n                                sliceTryFreq: this.sliceTryFreq,\r\n                                url: this.url,\r\n                                isCheckMd5Request: true,\r\n                                headers: {\r\n                                    'upload-file-md5': JSON.stringify(md5Header)\r\n                                },\r\n                                formData: {\r\n                                    'upload-file-md5': JSON.stringify(md5Header)\r\n                                }\r\n\r\n                            }).send();\r\n                        }\r\n                    },\r\n                    progress(res) {\r\n                        // console.log(res);\r\n                    },\r\n                    complete(res) {\r\n                        // console.log(res);\r\n                    },\r\n                    error: function (res) {\r\n                        // console.log(res);\r\n                    }\r\n                });\r\n            }\r\n\r\n            // 多切片,循环将切片加入请求队列\r\n            for (let i = 0; i < singleFile['slices'].length; i++) {\r\n                // console.log(singleFile['slices'][i]);\r\n                // 与切片上传所需请求头合并\r\n                this.headers = Object.assign(this.headers, {\r\n                    // 该段起始位置-结束位置\r\n                    'upload-size-range': singleFile['slices'][i].start + '-' + singleFile['slices'][i].end,\r\n                    // 总大小\r\n                    'upload-total-size': singleFile.totalSize,\r\n                    // 总共所需上传次数\r\n                    'upload-total-slice': singleFile['slices'].length,\r\n                    // 当前是第几块\r\n                    'upload-now-order': i + 1,\r\n                    // 当前前端上传key\r\n                    'upload-file-id': singleFile['fileKey']\r\n                });\r\n\r\n                new Http({\r\n                    callBack: {\r\n                        // 每个切片实时上传回调\r\n                        progress: progress => {\r\n                            if (singleLoadedTotal === 0) {\r\n                                // 如果第一次为0，直接等于\r\n                                singleLoadedTotal = progress[key];\r\n                            } else {\r\n                                // e加等于本次实时减去上一次结束的\r\n                                singleLoadedTotal += progress[key] - s;\r\n                            }\r\n\r\n                            // #b002 将文件实时上传情况回调\r\n                            progressCallObj[key].loadedTotalSize = singleLoadedTotal;\r\n\r\n                            this.callBack.progress &&\r\n                            /*浏览器打印对象时如果对象未展开，由于对象引用问题，\r\n                            最后展开会导致显示不准确，所以采用深拷贝解决，更利于调试*/\r\n                            this.callBack.progress(Tool.deepClone(progressCallObj, {}));\r\n\r\n                            // 记录上一次结束的\r\n                            s = progress[key];\r\n                        },\r\n                        // 一个文件(全部切片)上传成功回调\r\n                        singleSuccess: resp => {\r\n                            try {\r\n                                this.callBack.singleSuccess &&\r\n                                this.callBack.singleSuccess({\r\n                                    field: resp.field,\r\n                                    response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\r\n                                });\r\n\r\n                                // #d002\r\n                                allSuccessResult.push({\r\n                                    field: resp.field,\r\n                                    response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\r\n                                });\r\n\r\n                                // #a002 判断是否全部上传完成\r\n                                for (let k = 0; k < allField.length; k++) {\r\n                                    if (key === allField[k]) {\r\n                                        // 上传一个移除\r\n                                        allField.splice(k, 1);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (allField.length === 0) {\r\n                                    // #a003\r\n                                    this.callBack.allSuccess &&\r\n                                    this.callBack.allSuccess(allSuccessResult);\r\n                                }\r\n                            } catch (e) {\r\n                                throw new Error(e.toString());\r\n\r\n                            }\r\n\r\n\r\n                        },\r\n                        // 一块切片上传成功回调\r\n                        sliceSuccess() {\r\n                            // 一块上传完成重置临时记录的大小\r\n                            s = 0;\r\n                        },\r\n                        error(resp) {\r\n                            console.log(resp);\r\n                        },\r\n                        // 某个文件由于某个切片上传连续失败回调\r\n                        tryFreqError: errorMsg => {\r\n\r\n                            this.callBack.tryFreqError &&\r\n                            this.callBack.tryFreqError(errorMsg);\r\n                        }\r\n                    },\r\n                    url: this.url,\r\n                    sliceTryFreq: this.sliceTryFreq,\r\n                    headers: this.headers,\r\n                    formData: this.formData,\r\n                    fileData: {\r\n                        fieldName: key,\r\n                        fileName: singleFile['fileName'],\r\n                        fileKey: singleFile['fileKey'],\r\n                        file: singleFile['slices'][i],\r\n                        order: i\r\n                        //\r\n                        // [key]: {\r\n                        //     fileName: singleFile['fileName'],\r\n                        //     fileKey: singleFile['fileKey'],\r\n                        //     file: singleFile['slices'][i]\r\n                        // }\r\n                    },\r\n                    delay: this.delay\r\n                }).send();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default UploadFile;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Slice {\r\n\r\n\r\n    constructor(options) {\r\n        // 文件\r\n        this.file = options.file;\r\n        // 文件大小\r\n        this.totalSize = this.file.size;\r\n        // 切片大小\r\n        this.chunkSile = options.chunkSile * 1024 * 1024;\r\n        // 需要传输几次\r\n        this.chunkLength = 0;\r\n        // 切片集合\r\n        this.slices = [];\r\n\r\n        // 切片开始位置\r\n        this.start = 0;\r\n        // 切片结束位置\r\n        this.end = 0;\r\n\r\n        this._compute();\r\n    }\r\n\r\n\r\n    /**\r\n     * @description 计算总共需要传输几次\r\n     * @return {Object} this\r\n     * */\r\n    _compute() {\r\n        // console.log('文件总大小' + this.totalSize);\r\n        if (this.totalSize <= this.chunkSile) {\r\n            this.chunkLength = 1;\r\n        } else {\r\n            this.chunkLength = Math.ceil(this.totalSize / this.chunkSile);\r\n        }\r\n        // console.log(this.chunkLength);\r\n    }\r\n\r\n    /**\r\n     * @description 获取该文件对象所以切片\r\n     * @return {Array} 切片集合\r\n     * */\r\n    getSlice() {\r\n        if (this.slices.length !== 0) {\r\n            return this.slices;\r\n        }\r\n        for (let i = 1; i <= this.chunkLength; i++) {\r\n            // 如果是总共传输一次或者最后一次\r\n            if (i === this.chunkLength || this.chunkLength === 1) {\r\n                this.end = this.totalSize;\r\n            } else {\r\n                this.end = i * this.chunkSile;\r\n            }\r\n            // 剪切文件\r\n            let blob = this.file.slice(this.start, this.end);\r\n\r\n            this.slices.push({\r\n                blob,\r\n                order: i,\r\n                start: this.start,\r\n                end: this.end\r\n            });\r\n            this.start = this.end;\r\n        }\r\n        return this.slices;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description 获取当前文件对象的大小\r\n     * @return {Number}\r\n     * */\r\n    getSize() {\r\n        return this.totalSize;\r\n    }\r\n\r\n    /**\r\n     * @description 获取当前文件切片块数\r\n     * @return {Number}\r\n     * */\r\n    getChunkLength() {\r\n        return this.chunkLength;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Slice;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nimport queueSend from './queue.send';\r\nimport Tool from './tool';\r\n\r\nclass Http {\r\n\r\n    constructor(options) {\r\n        this.url = options.url;\r\n        this.formData = Tool.deepClone(options.formData, {});\r\n        this.headers = Tool.deepClone(options.headers || {}, {});\r\n        this.fileData = options.fileData || {};\r\n        this.callBack = options.callBack || {};\r\n        this.sliceTryFreq = options.sliceTryFreq;\r\n        this.isCheckMd5Request = options.isCheckMd5Request || false;\r\n        this.delay = options.delay;\r\n    }\r\n\r\n\r\n    send() {\r\n        let nowUploadKey = null;\r\n        if (this.fileData.fieldName) {\r\n            // 当前发送的key\r\n            nowUploadKey = this.fileData.fieldName;\r\n        }\r\n\r\n\r\n        // 追加到队列\r\n        queueSend.queue.push({\r\n            delay: this.delay,\r\n            // 本次请求切片所属字段\r\n            fieldName: this.fileData.fieldName,\r\n            // 本次请求切片在文件的第几块\r\n            order: this.fileData.order || '',\r\n            trySend: 0,\r\n            // 最大限度每个切片允许上传失败次数\r\n            maxTrySend: this.sliceTryFreq,\r\n            isCheckMd5Request: this.isCheckMd5Request,\r\n            cancelSend: (isCheckMd5Request) => {\r\n                if (isCheckMd5Request) {\r\n                    this.callBack.checkMd5Result &&\r\n                    this.callBack.checkMd5Result({\r\n                        httpStatus: queueSend.lastHttpStatus,\r\n                        response: null\r\n                    });\r\n\r\n                } else {\r\n                    // 取消本文件的所以切片上传\r\n                    queueSend.removeField(this.fileData.fieldName);\r\n                    this.callBack.tryFreqError &&\r\n                    this.callBack.tryFreqError({\r\n                        httpStatus: queueSend.lastHttpStatus,\r\n                        fieldName: this.fileData.fieldName, // 字段名称\r\n                        order: this.fileData.order // 在第几块一直失败\r\n                    });\r\n                }\r\n\r\n            },\r\n\r\n            // 队列执行函数\r\n            fn: () => {\r\n                let formData = new FormData();\r\n                let xhr = new XMLHttpRequest();\r\n                //\r\n                let url = this.url;\r\n                if (/\\?/.test(url)) {\r\n                    url = url + '&upload-random=' + Tool.makeRandom();\r\n                } else {\r\n                    url = url + '?upload-random=' + Tool.makeRandom();\r\n                }\r\n                xhr.open('post', url, true);\r\n                // 循环追加数据\r\n                for (let key in this.formData) {\r\n                    formData.append(key, this.formData[key]);\r\n                }\r\n                // 循环追加请求头\r\n                for (let key in this.headers) {\r\n                    xhr.setRequestHeader(key, this.headers[key]);\r\n                }\r\n\r\n                if (nowUploadKey) {\r\n                    // 追加文件\r\n                    formData.append(this.fileData.fieldName/*file key*/,\r\n                        this.fileData['file']['blob']/*blob*/,\r\n                        this.fileData['fileName']/*file name*/);\r\n                }\r\n\r\n\r\n                // 监听状态改变\r\n                xhr.onreadystatechange = () => {\r\n\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        // 返回200，表示一个文件请求成功，通知删除该请求队列\r\n                        queueSend.sendSuccess();\r\n                        this.callBack.singleSuccess && this.callBack.singleSuccess({\r\n                            field: this.fileData.fieldName,\r\n                            status: xhr.status,\r\n                            response: xhr.responseText\r\n                        });\r\n                        try {\r\n                            // 是否是校验md5请求\r\n                            if (this.isCheckMd5Request) {\r\n                                this.callBack.checkMd5Result &&\r\n                                this.callBack.checkMd5Result({\r\n                                    httpStatus: queueSend.lastHttpStatus,\r\n                                    response: typeof xhr.responseText === 'string' ? JSON.parse(xhr.responseText) : xhr.responseText\r\n                                });\r\n                            }\r\n                        } catch (e) {\r\n                            throw new Error(e.toString());\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (xhr.readyState === 4 && xhr.status === 206) {\r\n                        // 返回206，表示一块切片请求成功，通知删除该请求队列\r\n                        queueSend.sendSuccess();\r\n                        this.callBack.sliceSuccess && this.callBack.sliceSuccess({\r\n                            status: xhr.status,\r\n                            response: xhr.responseText\r\n                        });\r\n                    }\r\n                    // 请求完成，继续下一次请求，如果后台报非200 || 206则没有通知上传成功，会继续发送上一次请求\r\n                    if (xhr.readyState === 4) {\r\n                        // 保存最后一次HTTP状态码\r\n                        queueSend.lastHttpStatus = xhr.status;\r\n                        queueSend.isSendLoading = false;\r\n                        queueSend.send();\r\n                    }\r\n\r\n                };\r\n                // 监听进度\r\n                xhr.upload.onprogress = (evt) => {\r\n                    if (evt.lengthComputable) {\r\n\r\n                        // this.callBack.progress && this.callBack.progress(Math.round(evt.loaded / evt.total * 100));\r\n                        this.callBack.progress\r\n                        && this.callBack.progress(\r\n                            {[nowUploadKey]: evt.loaded}\r\n                        );\r\n                    }\r\n                };\r\n                xhr.send(formData);\r\n            }\r\n        });\r\n        queueSend.send();\r\n    }\r\n}\r\n\r\n\r\nexport default Http;\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport default {\r\n    isSendLoading: false,\r\n    queue: [],\r\n    lastHttpStatus: 0,\r\n    send: function () {\r\n        if (!this.isSendLoading) {\r\n            if (this.queue.length > 0) {\r\n                this.isSendLoading = true;\r\n                setTimeout(() => {\r\n                    this.queue[0].trySend++;\r\n                    // 判断一块切片是否已经超过指定失败数\r\n                    if (this.queue[0].trySend <= this.queue[0].maxTrySend) {\r\n                        this.queue[0].fn();\r\n                    } else {\r\n                        console.log(this.queue[0].isCheckMd5Request);\r\n                        this.queue[0].cancelSend(this.queue[0].isCheckMd5Request/*取消类型，false文件 || true校验MD5*/);\r\n                    }\r\n\r\n                }, this.queue[0].delay);\r\n            }\r\n        }\r\n    },\r\n    // 是否发送成功，成功删除上一次队列的请求，否则继续重发\r\n    sendSuccess() {\r\n        this.queue.splice(0, 1);\r\n    },\r\n    // 移除指定字段的所有队列\r\n    removeField(fieldName) {\r\n        this.queue = this.queue.filter(item => {\r\n            return item.fieldName !== fieldName;\r\n        });\r\n        // 继续发送\r\n        this.isSendLoading = false;\r\n        this.send();\r\n    }\r\n};","/*\r\n * Fastest md5 implementation around (JKM md5).\r\n * Credits: Joseph Myers\r\n *\r\n * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\r\n * @see http://jsperf.com/md5-shootout/7\r\n */\r\n\r\n/* this function is much faster,\r\n  so if possible we use it. Some IEs\r\n  are the only ones I know of that\r\n  need the idiotic second function,\r\n  generated by an if clause.  */\r\nvar add32 = function (a, b) {\r\n        return (a + b) & 0xFFFFFFFF;\r\n    },\r\n    hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n\r\n\r\nfunction cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n}\r\n\r\nfunction md5cycle(x, k) {\r\n    var a = x[0],\r\n        b = x[1],\r\n        c = x[2],\r\n        d = x[3];\r\n\r\n    a += (b & c | ~b & d) + k[0] - 680876936 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[1] - 389564586 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[2] + 606105819 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[4] - 176418897 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[7] - 45705983 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[10] - 42063 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[13] - 40341101 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n\r\n    a += (b & d | c & ~d) + k[1] - 165796510 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[11] + 643717713 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[0] - 373897302 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[5] - 701558691 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[10] + 38016083 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[15] - 660478335 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[4] - 405537848 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[9] + 568446438 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[3] - 187363961 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[2] - 51403784 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n\r\n    a += (b ^ c ^ d) + k[5] - 378558 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[14] - 35309556 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[7] - 155497632 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[13] + 681279174 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[0] - 358537222 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[3] - 722521979 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[6] + 76029189 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[9] - 640364487 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[12] - 421815835 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[15] + 530742520 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[2] - 995338651 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n\r\n    a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n\r\n    x[0] = a + x[0] | 0;\r\n    x[1] = b + x[1] | 0;\r\n    x[2] = c + x[2] | 0;\r\n    x[3] = d + x[3] | 0;\r\n}\r\n\r\nfunction md5blk(s) {\r\n    var md5blks = [],\r\n        i;\r\n    /* Andy King said do it this way. */\r\n\r\n    for (i = 0; i < 64; i += 4) {\r\n        md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\r\n    }\r\n    return md5blks;\r\n}\r\n\r\nfunction md5blk_array(a) {\r\n    var md5blks = [],\r\n        i;\r\n    /* Andy King said do it this way. */\r\n\r\n    for (i = 0; i < 64; i += 4) {\r\n        md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\r\n    }\r\n    return md5blks;\r\n}\r\n\r\nfunction md51(s) {\r\n    var n = s.length,\r\n        state = [1732584193, -271733879, -1732584194, 271733878],\r\n        i,\r\n        length,\r\n        tail,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    for (i = 64; i <= n; i += 64) {\r\n        md5cycle(state, md5blk(s.substring(i - 64, i)));\r\n    }\r\n    s = s.substring(i - 64);\r\n    length = s.length;\r\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\r\n    }\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(state, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Beware that the final length might not fit in 32 bits so we take care of that\r\n    tmp = n * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n\r\n    md5cycle(state, tail);\r\n    return state;\r\n}\r\n\r\nfunction md51_array(a) {\r\n    var n = a.length,\r\n        state = [1732584193, -271733879, -1732584194, 271733878],\r\n        i,\r\n        length,\r\n        tail,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    for (i = 64; i <= n; i += 64) {\r\n        md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\r\n    }\r\n\r\n    // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\r\n    // containing the last element of the parent array if the sub array specified starts\r\n    // beyond the length of the parent array - weird.\r\n    // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\r\n    a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\r\n\r\n    length = a.length;\r\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= a[i] << ((i % 4) << 3);\r\n    }\r\n\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(state, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Beware that the final length might not fit in 32 bits so we take care of that\r\n    tmp = n * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n\r\n    md5cycle(state, tail);\r\n\r\n    return state;\r\n}\r\n\r\nfunction rhex(n) {\r\n    var s = '',\r\n        j;\r\n    for (j = 0; j < 4; j += 1) {\r\n        s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction hex(x) {\r\n    var i;\r\n    for (i = 0; i < x.length; i += 1) {\r\n        x[i] = rhex(x[i]);\r\n    }\r\n    return x.join('');\r\n}\r\n\r\n// In some cases the fast add32 function cannot be used..\r\nif (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\r\n    add32 = function (x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    };\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * ArrayBuffer slice polyfill.\r\n *\r\n * @see https://github.com/ttaubert/node-arraybuffer-slice\r\n */\r\n\r\nif (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\r\n    (function () {\r\n        function clamp(val, length) {\r\n            val = (val | 0) || 0;\r\n\r\n            if (val < 0) {\r\n                return Math.max(val + length, 0);\r\n            }\r\n\r\n            return Math.min(val, length);\r\n        }\r\n\r\n        ArrayBuffer.prototype.slice = function (from, to) {\r\n            var length = this.byteLength,\r\n                begin = clamp(from, length),\r\n                end = length,\r\n                num,\r\n                target,\r\n                targetArray,\r\n                sourceArray;\r\n\r\n            if (to !== undefined) {\r\n                end = clamp(to, length);\r\n            }\r\n\r\n            if (begin > end) {\r\n                return new ArrayBuffer(0);\r\n            }\r\n\r\n            num = end - begin;\r\n            target = new ArrayBuffer(num);\r\n            targetArray = new Uint8Array(target);\r\n\r\n            sourceArray = new Uint8Array(this, begin, num);\r\n            targetArray.set(sourceArray);\r\n\r\n            return target;\r\n        };\r\n    })();\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nfunction toUtf8(str) {\r\n    if (/[\\u0080-\\uFFFF]/.test(str)) {\r\n        str = unescape(encodeURIComponent(str));\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction utf8Str2ArrayBuffer(str, returnUInt8Array) {\r\n    var length = str.length,\r\n        buff = new ArrayBuffer(length),\r\n        arr = new Uint8Array(buff),\r\n        i;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        arr[i] = str.charCodeAt(i);\r\n    }\r\n\r\n    return returnUInt8Array ? arr : buff;\r\n}\r\n\r\nfunction arrayBuffer2Utf8Str(buff) {\r\n    return String.fromCharCode.apply(null, new Uint8Array(buff));\r\n}\r\n\r\nfunction concatenateArrayBuffers(first, second, returnUInt8Array) {\r\n    var result = new Uint8Array(first.byteLength + second.byteLength);\r\n\r\n    result.set(new Uint8Array(first));\r\n    result.set(new Uint8Array(second), first.byteLength);\r\n\r\n    return returnUInt8Array ? result : result.buffer;\r\n}\r\n\r\nfunction hexToBinaryString(hex) {\r\n    var bytes = [],\r\n        length = hex.length,\r\n        x;\r\n\r\n    for (x = 0; x < length - 1; x += 2) {\r\n        bytes.push(parseInt(hex.substr(x, 2), 16));\r\n    }\r\n\r\n    return String.fromCharCode.apply(String, bytes);\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * SparkMD5 OOP implementation.\r\n *\r\n * Use this class to perform an incremental md5, otherwise use the\r\n * static methods instead.\r\n */\r\n\r\nfunction SparkMD5() {\r\n    // call reset to init the instance\r\n    this.reset();\r\n}\r\n\r\n/**\r\n * Appends a string.\r\n * A conversion will be applied if an utf8 string is detected.\r\n *\r\n * @param {String} str The string to be appended\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.append = function (str) {\r\n    // Converts the string to utf8 bytes if necessary\r\n    // Then append as binary\r\n    this.appendBinary(toUtf8(str));\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Appends a binary string.\r\n *\r\n * @param {String} contents The binary string to be appended\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.appendBinary = function (contents) {\r\n    this._buff += contents;\r\n    this._length += contents.length;\r\n\r\n    var length = this._buff.length,\r\n        i;\r\n\r\n    for (i = 64; i <= length; i += 64) {\r\n        md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\r\n    }\r\n\r\n    this._buff = this._buff.substring(i - 64);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the incremental computation, reseting the internal state and\r\n * returning the result.\r\n *\r\n * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.prototype.end = function (raw) {\r\n    var buff = this._buff,\r\n        length = buff.length,\r\n        i,\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        ret;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\r\n    }\r\n\r\n    this._finish(tail, length);\r\n    ret = hex(this._hash);\r\n\r\n    if (raw) {\r\n        ret = hexToBinaryString(ret);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Resets the internal state of the computation.\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.reset = function () {\r\n    this._buff = '';\r\n    this._length = 0;\r\n    this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @return {Object} The state\r\n */\r\nSparkMD5.prototype.getState = function () {\r\n    return {\r\n        buff: this._buff,\r\n        length: this._length,\r\n        hash: this._hash\r\n    };\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @param {Object} state The state\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.setState = function (state) {\r\n    this._buff = state.buff;\r\n    this._length = state.length;\r\n    this._hash = state.hash;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Releases memory used by the incremental buffer and other additional\r\n * resources. If you plan to use the instance again, use reset instead.\r\n */\r\nSparkMD5.prototype.destroy = function () {\r\n    delete this._hash;\r\n    delete this._buff;\r\n    delete this._length;\r\n};\r\n\r\n/**\r\n * Finish the final calculation based on the tail.\r\n *\r\n * @param {Array}  tail   The tail (will be modified)\r\n * @param {Number} length The length of the remaining buffer\r\n */\r\nSparkMD5.prototype._finish = function (tail, length) {\r\n    var i = length,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(this._hash, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Do the final computation based on the tail and length\r\n    // Beware that the final length may not fit in 32 bits so we take care of that\r\n    tmp = this._length * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n    md5cycle(this._hash, tail);\r\n};\r\n\r\n/**\r\n * Performs the md5 hash on a string.\r\n * A conversion will be applied if utf8 string is detected.\r\n *\r\n * @param {String}  str The string\r\n * @param {Boolean} [raw] True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.hash = function (str, raw) {\r\n    // Converts the string to utf8 bytes if necessary\r\n    // Then compute it using the binary function\r\n    return SparkMD5.hashBinary(toUtf8(str), raw);\r\n};\r\n\r\n/**\r\n * Performs the md5 hash on a binary string.\r\n *\r\n * @param {String}  content The binary string\r\n * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.hashBinary = function (content, raw) {\r\n    var hash = md51(content),\r\n        ret = hex(hash);\r\n\r\n    return raw ? hexToBinaryString(ret) : ret;\r\n};\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * SparkMD5 OOP implementation for array buffers.\r\n *\r\n * Use this class to perform an incremental md5 ONLY for array buffers.\r\n */\r\nSparkMD5.ArrayBuffer = function () {\r\n    // call reset to init the instance\r\n    this.reset();\r\n};\r\n\r\n/**\r\n * Appends an array buffer.\r\n *\r\n * @param {ArrayBuffer} arr The array to be appended\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.append = function (arr) {\r\n    var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\r\n        length = buff.length,\r\n        i;\r\n\r\n    this._length += arr.byteLength;\r\n\r\n    for (i = 64; i <= length; i += 64) {\r\n        md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\r\n    }\r\n\r\n    this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the incremental computation, reseting the internal state and\r\n * returning the result.\r\n *\r\n * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.ArrayBuffer.prototype.end = function (raw) {\r\n    var buff = this._buff,\r\n        length = buff.length,\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        i,\r\n        ret;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= buff[i] << ((i % 4) << 3);\r\n    }\r\n\r\n    this._finish(tail, length);\r\n    ret = hex(this._hash);\r\n\r\n    if (raw) {\r\n        ret = hexToBinaryString(ret);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Resets the internal state of the computation.\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.reset = function () {\r\n    this._buff = new Uint8Array(0);\r\n    this._length = 0;\r\n    this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @return {Object} The state\r\n */\r\nSparkMD5.ArrayBuffer.prototype.getState = function () {\r\n    var state = SparkMD5.prototype.getState.call(this);\r\n\r\n    // Convert buffer to a string\r\n    state.buff = arrayBuffer2Utf8Str(state.buff);\r\n\r\n    return state;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @param {Object} state The state\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.setState = function (state) {\r\n    // Convert string to buffer\r\n    state.buff = utf8Str2ArrayBuffer(state.buff, true);\r\n\r\n    return SparkMD5.prototype.setState.call(this, state);\r\n};\r\n\r\nSparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\r\n\r\nSparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\r\n\r\n/**\r\n * Performs the md5 hash on an array buffer.\r\n *\r\n * @param {ArrayBuffer} arr The array buffer\r\n * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.ArrayBuffer.hash = function (arr, raw) {\r\n    var hash = md51_array(new Uint8Array(arr)),\r\n        ret = hex(hash);\r\n\r\n    return raw ? hexToBinaryString(ret) : ret;\r\n};\r\n\r\n\r\n/**\r\n * @description 重新包装该方法\r\n * */\r\nfunction getFileMd5(options) {\r\n    var file = options.file;\r\n    var md5Str;\r\n    var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\r\n        // file = this.files[0],\r\n        chunkSize = 8097152, // Read in chunks of 2MB\r\n        chunks = Math.ceil(file.size / chunkSize),\r\n        currentChunk = 0,\r\n        spark = new SparkMD5.ArrayBuffer(),\r\n        fileReader = new FileReader();\r\n\r\n    fileReader.onload = function (e) {\r\n        // console.log('read chunk nr', currentChunk + 1, 'of', chunks);\r\n        spark.append(e.target.result); // Append array buffer\r\n        currentChunk++;\r\n        var md5_progress = Math.floor((currentChunk / chunks) * 100);\r\n        options.progress && options.progress({\r\n            fileName: file.name,\r\n            progress: md5_progress\r\n        });\r\n        if (currentChunk < chunks) {\r\n            loadNext();\r\n        } else {\r\n            md5Str = spark.end();\r\n            options.success && options.success({\r\n                md5: md5Str,\r\n                msg: 'success'\r\n            });\r\n            options.complete && options.complete({\r\n                result: true\r\n            });\r\n            // console.log(md5Str);\r\n        }\r\n    };\r\n\r\n    fileReader.onerror = function () {\r\n        options.error && options.error({\r\n            md5: '',\r\n            msg: 'error'\r\n        });\r\n        options.complete && options.complete({\r\n            result: false\r\n        });\r\n    };\r\n\r\n    function loadNext() {\r\n        var start = currentChunk * chunkSize,\r\n            end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\r\n        fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\r\n    }\r\n\r\n    loadNext();\r\n}\r\n\r\nexport default getFileMd5;"],"sourceRoot":""}