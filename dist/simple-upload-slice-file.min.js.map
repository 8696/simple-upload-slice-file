{"version":3,"sources":["webpack://SimpleUploadSliceFile/webpack/universalModuleDefinition","webpack://SimpleUploadSliceFile/webpack/bootstrap","webpack://SimpleUploadSliceFile/./src/tool.js","webpack://SimpleUploadSliceFile/./src/index.js","webpack://SimpleUploadSliceFile/./src/polyfill.js","webpack://SimpleUploadSliceFile/./src/upload.js","webpack://SimpleUploadSliceFile/./src/slice.js","webpack://SimpleUploadSliceFile/./src/http.js","webpack://SimpleUploadSliceFile/./src/queue.send.js","webpack://SimpleUploadSliceFile/./src/getMd5.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Tool","keys","maxPos","length","str","charAt","Math","floor","random","Date","getTime","fileName","split","pop","query","reg","obj","exec","RegExp","$1","$2","origin","target","prop","toString","deepClone","UploadFile","assign","varArgs","TypeError","to","index","arguments","nextSource","nextKey","writable","configurable","options","this","chunkSile","url","formData","formSleceFile","headers","callBack","sliceTryFreq","isSendCheckMd5","delay","datas","files","file","Error","nodeType","jQuery","FileList","File","slice","Slice","totalSize","size","fileKey","makeRandom","slices","getSlice","primordial","allField","progressCallObj","md5CallObj","allSuccessResult","singleFile","singleLoadedTotal","chunkLength","loadedTotalSize","field","md5","success","res","is","getFileMd5","md5Header","push","suffix","getFileNameSuffix","Http","checkMd5Result","resp","isCheckMd5Request","JSON","stringify","send","progress","complete","error","start","end","singleSuccess","response","parse","k","splice","allSuccess","e","sliceSuccess","console","log","tryFreqError","errorMsg","fileData","fieldName","order","_compute","ceil","blob","nowUploadKey","queueSend","queue","trySend","maxTrySend","cancelSend","httpStatus","lastHttpStatus","removeField","fn","FormData","xhr","XMLHttpRequest","test","open","append","setRequestHeader","onreadystatechange","readyState","status","sendSuccess","responseText","isSendLoading","upload","onprogress","evt","lengthComputable","loaded","setTimeout","filter","item","hex_chr","md5cycle","x","a","b","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","state","substring","match","parseInt","rhex","j","hex","join","toUtf8","unescape","encodeURIComponent","hexToBinaryString","bytes","substr","String","fromCharCode","apply","SparkMD5","reset","ArrayBuffer","clamp","val","max","min","from","num","targetArray","sourceArray","byteLength","begin","undefined","Uint8Array","set","appendBinary","contents","_buff","_length","_hash","raw","ret","buff","_finish","getState","hash","setState","destroy","hashBinary","content","arr","first","second","returnUInt8Array","result","buffer","subarray","utf8Str2ArrayBuffer","md51_array","md5Str","blobSlice","mozSlice","webkitSlice","chunks","currentChunk","spark","fileReader","FileReader","loadNext","readAsArrayBuffer","onload","md5_progress","msg","onerror"],"mappings":"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","file":"simple-upload-slice-file.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleUploadSliceFile\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleUploadSliceFile\"] = factory();\n\telse\n\t\troot[\"SimpleUploadSliceFile\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Tool {\n  /**\n   * @description 生成随机字符串\n   * @return {String}\n   * */\n  static makeRandom() {\n    let keys = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let maxPos = keys.length;\n    let str = '';\n    for (let i = 0; i < 20; i++) {\n      str += keys.charAt(Math.floor(Math.random() * maxPos));\n    }\n    return str + new Date().getTime();\n\n  }\n\n  /**\n   * @description 获取文件名后缀\n   * @return {String} 文件名称\n   * @return {String}\n   * */\n  static getFileNameSuffix(fileName) {\n    return fileName.split('.').pop();\n  }\n\n  /**\n   * @description 将queryString解析成对象\n   * @return {String} queryString\n   * @return {Object} 转换之后的对象\n   * */\n  static queryStringToObj(query) {\n    let reg = /([^=&\\s]+)[=\\s]*([^&\\s]*)/g;\n    let obj = {};\n    while (reg.exec(query)) {\n      obj[RegExp.$1] = RegExp.$2;\n    }\n    return obj;\n  }\n\n  static deepClone(origin, target) {\n    for (let prop in origin) {\n      if (origin.hasOwnProperty(prop)) {\n        //判断是原始值还是引用值 并且不包含null(null其实是原始值，但是typeof返回是'object')\n        if (typeof origin[prop] === 'object' && Object.prototype.toString.call(origin[prop]) !== '[object Null]') {\n          //判断原始值是对象还是数组\n          target[prop] = Object.prototype.toString.call(origin[prop]) === '[object Array]' ? [] : {};\n          Tool.deepClone(origin[prop], target[prop]);\n        } else {\n          //string null undefined number\n          target[prop] = origin[prop];\n        }\n      }\n    }\n    return target;\n  }\n}\n\n\nexport default Tool;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import './polyfill';\nimport UploadFile from './upload';\n\n\nmodule.exports = UploadFile;\n\n\n","/**\n * @description  解决IE不认识 Object.assign 的问题\n * @description2 采用自 https://developer.mozilla.org/zh-CN/\n * */\n\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target, varArgs) { // .length of function is 2\n      'use strict';\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","import Slice from './slice';\n\nimport Tool from './tool';\n\nimport Http from './http';\n\nimport getFileMd5 from './getMd5';\n\n\nclass UploadFile {\n\n  constructor(options) {\n\n    // 切片的大小数\n    this.chunkSile = options.chunkSile || 10;\n    // 请求地址\n    this.url = options.url || 'http://127.0.0.1';\n    // 请求数据\n    this.formData = {};\n    // 请求文件\n    this.formSleceFile = [];\n\n    // 请求头\n    this.headers = {};\n    // 回调\n    this.callBack = options.callBack || {};\n    // 一个切片连续上传几次失败直接断开整个文件上传\n    this.sliceTryFreq = options.sliceTryFreq || 10;\n    // 是否最后发送MD5值进行校验\n    this.isSendCheckMd5 = options.isSendCheckMd5 || false;\n\n    this.delay = options.delay || 0;\n  }\n\n  /**\n   * @description 追加请求头\n   * @param headers {Object} 请求头对象\n   * @return {Object} this\n   * */\n  appendHeader(headers) {\n    Object.assign(this.headers, headers);\n    return this;\n  }\n\n  /**\n   * @description 追加请求携带数据\n   * @param datas {Object}\n   * @return object this\n   * */\n  appendData(datas) {\n    Object.assign(this.formData, datas);\n    return this;\n  }\n\n  /**\n   * @description 追加请求文件数据\n   * @param files {Object}\n   * @return object this\n   * */\n  appendFile(files) {\n\n    // 将文件集合切片放入本对象fromFile\n    for (let key in files) {\n      let file = null;\n      if (!files[key]) {\n        throw new Error('No correct file was selected');\n      } else if (files[key].nodeType === 1) {\n        file = files[key]['files'][0];\n      } else if (typeof jQuery !== 'undefined' && files[key] instanceof jQuery) {\n        file = files[key][0]['files'][0];\n      } else if (files[key] instanceof FileList) {\n        file = files[key][0];\n      } else if (files[key] instanceof File) {\n        file = files[key];\n      }\n\n      // 实例化切片对象，将文件进行切片、计算等操作\n      let slice = new Slice({\n        chunkSile: this.chunkSile,\n        file: file\n      });\n\n\n      // 将文件所有切片存入切片集合\n      this.formSleceFile[key] = {\n        totalSize: file.size,\n        fileName: file['name'],\n        // fileKey: Tool.makeRandom() + '.' + Tool.getFileNameSuffix(files[key]['name']),\n        fileKey: Tool.makeRandom(),\n        slices: slice.getSlice(),\n        primordial: file\n      };\n\n    }\n\n    return this;\n\n  }\n\n  send() {\n\n    // #a001 上传的所有字段放在数组里面\n    let allField = Object.keys(this.formSleceFile);\n    // #b001 将进度回调的所有字段名称、回调格式定好\n    let progressCallObj = {\n      /* fieldName: {\n           totalSize: 0,\n           fileName: '',\n           fileKey: '',\n           chunkLength: 0\n       }\n       */\n    };\n\n    // #c001 将获取成功的MD5回到\n    let md5CallObj = {};\n\n    // #d001 将每次单文件上传完成的响应存起来\n    let allSuccessResult = [];\n    // 多文件\n    for (let key in this.formSleceFile) {\n      // 单个文件\n      let singleFile = this.formSleceFile[key],\n        // 单个文件总共已经上传的字节\n        singleLoadedTotal = 0,\n        // 临时记录本次与上次的相隔的大小\n        s = 0;\n      // 进度回调参数\n      progressCallObj[key] = {\n        totalSize: singleFile['totalSize'],\n        fileName: singleFile['fileName'],\n        fileKey: singleFile['fileKey'],\n        chunkLength: singleFile['slices'].length,\n        loadedTotalSize: 0\n      };\n      // 获取文件MD5\n      md5CallObj[key] = {\n        field: key,\n        fileKey: singleFile['fileKey'],\n        fileName: singleFile['fileName'],\n        md5: null\n      };\n      if (this.isSendCheckMd5) {\n        getFileMd5({\n          file: singleFile['primordial'],\n          success: (res) => {\n            // console.log('md5md5md5md5');\n            md5CallObj[key].md5 = res.md5;\n            // 全部获取成功才进行回调\n            let is = true;\n            for (let key in md5CallObj) {\n              if (!md5CallObj[key].md5) {\n                is = false;\n              }\n            }\n            if (is) {\n              this.callBack.getFileMd5 &&\n              this.callBack.getFileMd5(md5CallObj);\n              // 发送md5校验\n\n              let md5Header = [];\n              for (let key in md5CallObj) {\n                md5Header.push({\n                  'upload-file-id': md5CallObj[key]['fileKey'],\n                  md5: md5CallObj[key]['md5'],\n                  suffix: Tool.getFileNameSuffix(md5CallObj[key]['fileName'])\n                });\n              }\n              new Http({\n                callBack: {\n                  checkMd5Result: (resp) => {\n                    this.callBack.checkMd5Result &&\n                    this.callBack.checkMd5Result(resp);\n                  }\n                },\n                sliceTryFreq: this.sliceTryFreq,\n                url: this.url,\n                isCheckMd5Request: true,\n                headers: {\n                  'upload-file-md5': JSON.stringify(md5Header)\n                },\n                formData: {\n                  'upload-file-md5': JSON.stringify(md5Header)\n                }\n\n              }).send();\n            }\n          },\n          progress(res) {\n            // console.log(res);\n          },\n          complete(res) {\n            // console.log(res);\n          },\n          error: function (res) {\n            // console.log(res);\n          }\n        });\n      }\n\n      // 多切片,循环将切片加入请求队列\n      for (let i = 0; i < singleFile['slices'].length; i++) {\n        // console.log(singleFile['slices'][i]);\n        // 与切片上传所需请求头合并\n        this.headers = Object.assign(this.headers, {\n          // 该段起始位置-结束位置\n          'upload-size-range': singleFile['slices'][i].start + '-' + singleFile['slices'][i].end,\n          // 总大小\n          'upload-total-size': singleFile.totalSize,\n          // 总共所需上传次数\n          'upload-total-slice': singleFile['slices'].length,\n          // 当前是第几块\n          'upload-now-order': i + 1,\n          // 当前前端上传key\n          'upload-file-id': singleFile['fileKey']\n        });\n\n        new Http({\n          callBack: {\n            // 每个切片实时上传回调\n            progress: progress => {\n              if (singleLoadedTotal === 0) {\n                // 如果第一次为0，直接等于\n                singleLoadedTotal = progress[key];\n              } else {\n                // e加等于本次实时减去上一次结束的\n                singleLoadedTotal += progress[key] - s;\n              }\n\n              // #b002 将文件实时上传情况回调\n              progressCallObj[key].loadedTotalSize = singleLoadedTotal;\n\n              this.callBack.progress &&\n              /*浏览器打印对象时如果对象未展开，由于对象引用问题，\n              最后展开会导致显示不准确，所以采用深拷贝解决，更利于调试*/\n              this.callBack.progress(Tool.deepClone(progressCallObj, {}));\n\n              // 记录上一次结束的\n              s = progress[key];\n            },\n            // 一个文件(全部切片)上传成功回调\n            singleSuccess: resp => {\n              try {\n                this.callBack.singleSuccess &&\n                this.callBack.singleSuccess({\n                  field: resp.field,\n                  response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\n                });\n\n                // #d002\n                allSuccessResult.push({\n                  field: resp.field,\n                  response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\n                });\n\n                // #a002 判断是否全部上传完成\n                for (let k = 0; k < allField.length; k++) {\n                  if (key === allField[k]) {\n                    // 上传一个移除\n                    allField.splice(k, 1);\n                    break;\n                  }\n                }\n                if (allField.length === 0) {\n                  // #a003\n                  this.callBack.allSuccess &&\n                  this.callBack.allSuccess(allSuccessResult);\n                }\n              } catch (e) {\n                throw new Error(e.toString());\n\n              }\n\n\n            },\n            // 一块切片上传成功回调\n            sliceSuccess() {\n              // 一块上传完成重置临时记录的大小\n              s = 0;\n            },\n            error(resp) {\n              console.log(resp);\n            },\n            // 某个文件由于某个切片上传连续失败回调\n            tryFreqError: errorMsg => {\n\n              this.callBack.tryFreqError &&\n              this.callBack.tryFreqError(errorMsg);\n            }\n          },\n          url: this.url,\n          sliceTryFreq: this.sliceTryFreq,\n          headers: this.headers,\n          formData: this.formData,\n          fileData: {\n            fieldName: key,\n            fileName: singleFile['fileName'],\n            fileKey: singleFile['fileKey'],\n            file: singleFile['slices'][i],\n            order: i\n            //\n            // [key]: {\n            //     fileName: singleFile['fileName'],\n            //     fileKey: singleFile['fileKey'],\n            //     file: singleFile['slices'][i]\n            // }\n          },\n          delay: this.delay\n        }).send();\n      }\n\n\n    }\n\n  }\n\n\n}\n\n\nexport default UploadFile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","class Slice {\n\n\n  constructor(options) {\n    // 文件\n    this.file = options.file;\n    // 文件大小\n    this.totalSize = this.file.size;\n    // 切片大小\n    this.chunkSile = options.chunkSile * 1024 * 1024;\n    // 需要传输几次\n    this.chunkLength = 0;\n    // 切片集合\n    this.slices = [];\n\n    // 切片开始位置\n    this.start = 0;\n    // 切片结束位置\n    this.end = 0;\n\n    this._compute();\n  }\n\n\n  /**\n   * @description 计算总共需要传输几次\n   * @return {Object} this\n   * */\n  _compute() {\n    // console.log('文件总大小' + this.totalSize);\n    if (this.totalSize <= this.chunkSile) {\n      this.chunkLength = 1;\n    } else {\n      this.chunkLength = Math.ceil(this.totalSize / this.chunkSile);\n    }\n    // console.log(this.chunkLength);\n  }\n\n  /**\n   * @description 获取该文件对象所以切片\n   * @return {Array} 切片集合\n   * */\n  getSlice() {\n    if (this.slices.length !== 0) {\n      return this.slices;\n    }\n    for (let i = 1; i <= this.chunkLength; i++) {\n      // 如果是总共传输一次或者最后一次\n      if (i === this.chunkLength || this.chunkLength === 1) {\n        this.end = this.totalSize;\n      } else {\n        this.end = i * this.chunkSile;\n      }\n      // 剪切文件\n      let blob = this.file.slice(this.start, this.end);\n\n      this.slices.push({\n        blob,\n        order: i,\n        start: this.start,\n        end: this.end\n      });\n      this.start = this.end;\n    }\n    return this.slices;\n  }\n\n\n  /**\n   * @description 获取当前文件对象的大小\n   * @return {Number}\n   * */\n  getSize() {\n    return this.totalSize;\n  }\n\n  /**\n   * @description 获取当前文件切片块数\n   * @return {Number}\n   * */\n  getChunkLength() {\n    return this.chunkLength;\n  }\n\n\n}\n\nexport default Slice;\n\n\n\n\n\n\n\n\n","import queueSend from './queue.send';\nimport Tool from './tool';\n\nclass Http {\n\n  constructor(options) {\n    this.url = options.url;\n    this.formData = Tool.deepClone(options.formData, {});\n    this.headers = Tool.deepClone(options.headers || {}, {});\n    this.fileData = options.fileData || {};\n    this.callBack = options.callBack || {};\n    this.sliceTryFreq = options.sliceTryFreq;\n    this.isCheckMd5Request = options.isCheckMd5Request || false;\n    this.delay = options.delay;\n  }\n\n\n  send() {\n    let nowUploadKey = null;\n    if (this.fileData.fieldName) {\n      // 当前发送的key\n      nowUploadKey = this.fileData.fieldName;\n    }\n\n\n    // 追加到队列\n    queueSend.queue.push({\n      delay: this.delay,\n      // 本次请求切片所属字段\n      fieldName: this.fileData.fieldName,\n      // 本次请求切片在文件的第几块\n      order: this.fileData.order || '',\n      trySend: 0,\n      // 最大限度每个切片允许上传失败次数\n      maxTrySend: this.sliceTryFreq,\n      isCheckMd5Request: this.isCheckMd5Request,\n      cancelSend: (isCheckMd5Request) => {\n        if (isCheckMd5Request) {\n          this.callBack.checkMd5Result &&\n          this.callBack.checkMd5Result({\n            httpStatus: queueSend.lastHttpStatus,\n            response: null\n          });\n\n        } else {\n          // 取消本文件的所以切片上传\n          queueSend.removeField(this.fileData.fieldName);\n          this.callBack.tryFreqError &&\n          this.callBack.tryFreqError({\n            httpStatus: queueSend.lastHttpStatus,\n            fieldName: this.fileData.fieldName, // 字段名称\n            order: this.fileData.order // 在第几块一直失败\n          });\n        }\n\n      },\n\n      // 队列执行函数\n      fn: () => {\n        let formData = new FormData();\n        let xhr = new XMLHttpRequest();\n        //\n        let url = this.url;\n        if (/\\?/.test(url)) {\n          url = url + '&upload-random=' + Tool.makeRandom();\n        } else {\n          url = url + '?upload-random=' + Tool.makeRandom();\n        }\n        xhr.open('post', url, true);\n        // 循环追加数据\n        for (let key in this.formData) {\n          formData.append(key, this.formData[key]);\n        }\n        // 循环追加请求头\n        for (let key in this.headers) {\n          xhr.setRequestHeader(key, this.headers[key]);\n        }\n\n        if (nowUploadKey) {\n          // 追加文件\n          formData.append(this.fileData.fieldName/*file key*/,\n            this.fileData['file']['blob']/*blob*/,\n            this.fileData['fileName']/*file name*/);\n        }\n\n\n        // 监听状态改变\n        xhr.onreadystatechange = () => {\n\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            // 返回200，表示一个文件请求成功，通知删除该请求队列\n            queueSend.sendSuccess();\n            this.callBack.singleSuccess && this.callBack.singleSuccess({\n              field: this.fileData.fieldName,\n              status: xhr.status,\n              response: xhr.responseText\n            });\n            try {\n              // 是否是校验md5请求\n              if (this.isCheckMd5Request) {\n                this.callBack.checkMd5Result &&\n                this.callBack.checkMd5Result({\n                  httpStatus: queueSend.lastHttpStatus,\n                  response: typeof xhr.responseText === 'string' ? JSON.parse(xhr.responseText) : xhr.responseText\n                });\n              }\n            } catch (e) {\n              throw new Error(e.toString());\n            }\n\n          }\n\n          if (xhr.readyState === 4 && xhr.status === 206) {\n            // 返回206，表示一块切片请求成功，通知删除该请求队列\n            queueSend.sendSuccess();\n            this.callBack.sliceSuccess && this.callBack.sliceSuccess({\n              status: xhr.status,\n              response: xhr.responseText\n            });\n          }\n          // 请求完成，继续下一次请求，如果后台报非200 || 206则没有通知上传成功，会继续发送上一次请求\n          if (xhr.readyState === 4) {\n            // 保存最后一次HTTP状态码\n            queueSend.lastHttpStatus = xhr.status;\n            queueSend.isSendLoading = false;\n            queueSend.send();\n          }\n\n        };\n        // 监听进度\n        xhr.upload.onprogress = (evt) => {\n          if (evt.lengthComputable) {\n\n            // this.callBack.progress && this.callBack.progress(Math.round(evt.loaded / evt.total * 100));\n            this.callBack.progress\n            && this.callBack.progress(\n              {[nowUploadKey]: evt.loaded}\n            );\n          }\n        };\n        xhr.send(formData);\n      }\n    });\n    queueSend.send();\n  }\n}\n\n\nexport default Http;\n\n\n\n\n","export default {\n  isSendLoading: false,\n  queue: [],\n  lastHttpStatus: 0,\n  send: function () {\n    if (!this.isSendLoading) {\n      if (this.queue.length > 0) {\n        this.isSendLoading = true;\n        setTimeout(() => {\n          this.queue[0].trySend++;\n          // 判断一块切片是否已经超过指定失败数\n          if (this.queue[0].trySend <= this.queue[0].maxTrySend) {\n            this.queue[0].fn();\n          } else {\n            console.log(this.queue[0].isCheckMd5Request);\n            this.queue[0].cancelSend(this.queue[0].isCheckMd5Request/*取消类型，false文件 || true校验MD5*/);\n          }\n\n        }, this.queue[0].delay);\n      }\n    }\n  },\n  // 是否发送成功，成功删除上一次队列的请求，否则继续重发\n  sendSuccess() {\n    this.queue.splice(0, 1);\n  },\n  // 移除指定字段的所有队列\n  removeField(fieldName) {\n    this.queue = this.queue.filter(item => {\n      return item.fieldName !== fieldName;\n    });\n    // 继续发送\n    this.isSendLoading = false;\n    this.send();\n  }\n};\n","/*\n * Fastest md5 implementation around (JKM md5).\n * Credits: Joseph Myers\n *\n * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n * @see http://jsperf.com/md5-shootout/7\n */\n\n/* this function is much faster,\n  so if possible we use it. Some IEs\n  are the only ones I know of that\n  need the idiotic second function,\n  generated by an if clause.  */\nvar add32 = function (a, b) {\n    return (a + b) & 0xFFFFFFFF;\n  },\n  hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\nfunction cmn(q, a, b, x, s, t) {\n  a = add32(add32(a, q), add32(x, t));\n  return add32((a << s) | (a >>> (32 - s)), b);\n}\n\nfunction md5cycle(x, k) {\n  var a = x[0],\n    b = x[1],\n    c = x[2],\n    d = x[3];\n\n  a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n  a = (a << 7 | a >>> 25) + b | 0;\n  d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n  d = (d << 12 | d >>> 20) + a | 0;\n  c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n  c = (c << 17 | c >>> 15) + d | 0;\n  b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n  b = (b << 22 | b >>> 10) + c | 0;\n  a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n  a = (a << 7 | a >>> 25) + b | 0;\n  d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n  d = (d << 12 | d >>> 20) + a | 0;\n  c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n  c = (c << 17 | c >>> 15) + d | 0;\n  b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n  b = (b << 22 | b >>> 10) + c | 0;\n  a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n  a = (a << 7 | a >>> 25) + b | 0;\n  d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n  d = (d << 12 | d >>> 20) + a | 0;\n  c += (d & a | ~d & b) + k[10] - 42063 | 0;\n  c = (c << 17 | c >>> 15) + d | 0;\n  b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n  b = (b << 22 | b >>> 10) + c | 0;\n  a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n  a = (a << 7 | a >>> 25) + b | 0;\n  d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n  d = (d << 12 | d >>> 20) + a | 0;\n  c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n  c = (c << 17 | c >>> 15) + d | 0;\n  b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n  b = (b << 22 | b >>> 10) + c | 0;\n\n  a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n  a = (a << 5 | a >>> 27) + b | 0;\n  d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n  d = (d << 9 | d >>> 23) + a | 0;\n  c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n  c = (c << 14 | c >>> 18) + d | 0;\n  b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n  b = (b << 20 | b >>> 12) + c | 0;\n  a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n  a = (a << 5 | a >>> 27) + b | 0;\n  d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n  d = (d << 9 | d >>> 23) + a | 0;\n  c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n  c = (c << 14 | c >>> 18) + d | 0;\n  b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n  b = (b << 20 | b >>> 12) + c | 0;\n  a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n  a = (a << 5 | a >>> 27) + b | 0;\n  d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n  d = (d << 9 | d >>> 23) + a | 0;\n  c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n  c = (c << 14 | c >>> 18) + d | 0;\n  b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n  b = (b << 20 | b >>> 12) + c | 0;\n  a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n  a = (a << 5 | a >>> 27) + b | 0;\n  d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n  d = (d << 9 | d >>> 23) + a | 0;\n  c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n  c = (c << 14 | c >>> 18) + d | 0;\n  b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n  b = (b << 20 | b >>> 12) + c | 0;\n\n  a += (b ^ c ^ d) + k[5] - 378558 | 0;\n  a = (a << 4 | a >>> 28) + b | 0;\n  d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n  d = (d << 11 | d >>> 21) + a | 0;\n  c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n  c = (c << 16 | c >>> 16) + d | 0;\n  b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n  b = (b << 23 | b >>> 9) + c | 0;\n  a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n  a = (a << 4 | a >>> 28) + b | 0;\n  d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n  d = (d << 11 | d >>> 21) + a | 0;\n  c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n  c = (c << 16 | c >>> 16) + d | 0;\n  b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n  b = (b << 23 | b >>> 9) + c | 0;\n  a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n  a = (a << 4 | a >>> 28) + b | 0;\n  d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n  d = (d << 11 | d >>> 21) + a | 0;\n  c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n  c = (c << 16 | c >>> 16) + d | 0;\n  b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n  b = (b << 23 | b >>> 9) + c | 0;\n  a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n  a = (a << 4 | a >>> 28) + b | 0;\n  d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n  d = (d << 11 | d >>> 21) + a | 0;\n  c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n  c = (c << 16 | c >>> 16) + d | 0;\n  b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n  b = (b << 23 | b >>> 9) + c | 0;\n\n  a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n  a = (a << 6 | a >>> 26) + b | 0;\n  d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n  d = (d << 10 | d >>> 22) + a | 0;\n  c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n  c = (c << 15 | c >>> 17) + d | 0;\n  b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n  b = (b << 21 | b >>> 11) + c | 0;\n  a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n  a = (a << 6 | a >>> 26) + b | 0;\n  d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n  d = (d << 10 | d >>> 22) + a | 0;\n  c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n  c = (c << 15 | c >>> 17) + d | 0;\n  b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n  b = (b << 21 | b >>> 11) + c | 0;\n  a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n  a = (a << 6 | a >>> 26) + b | 0;\n  d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n  d = (d << 10 | d >>> 22) + a | 0;\n  c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n  c = (c << 15 | c >>> 17) + d | 0;\n  b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n  b = (b << 21 | b >>> 11) + c | 0;\n  a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n  a = (a << 6 | a >>> 26) + b | 0;\n  d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n  d = (d << 10 | d >>> 22) + a | 0;\n  c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n  c = (c << 15 | c >>> 17) + d | 0;\n  b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n  b = (b << 21 | b >>> 11) + c | 0;\n\n  x[0] = a + x[0] | 0;\n  x[1] = b + x[1] | 0;\n  x[2] = c + x[2] | 0;\n  x[3] = d + x[3] | 0;\n}\n\nfunction md5blk(s) {\n  var md5blks = [],\n    i;\n  /* Andy King said do it this way. */\n\n  for (i = 0; i < 64; i += 4) {\n    md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n  }\n  return md5blks;\n}\n\nfunction md5blk_array(a) {\n  var md5blks = [],\n    i;\n  /* Andy King said do it this way. */\n\n  for (i = 0; i < 64; i += 4) {\n    md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n  }\n  return md5blks;\n}\n\nfunction md51(s) {\n  var n = s.length,\n    state = [1732584193, -271733879, -1732584194, 271733878],\n    i,\n    length,\n    tail,\n    tmp,\n    lo,\n    hi;\n\n  for (i = 64; i <= n; i += 64) {\n    md5cycle(state, md5blk(s.substring(i - 64, i)));\n  }\n  s = s.substring(i - 64);\n  length = s.length;\n  tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < length; i += 1) {\n    tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n  }\n  tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n  if (i > 55) {\n    md5cycle(state, tail);\n    for (i = 0; i < 16; i += 1) {\n      tail[i] = 0;\n    }\n  }\n\n  // Beware that the final length might not fit in 32 bits so we take care of that\n  tmp = n * 8;\n  tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n  lo = parseInt(tmp[2], 16);\n  hi = parseInt(tmp[1], 16) || 0;\n\n  tail[14] = lo;\n  tail[15] = hi;\n\n  md5cycle(state, tail);\n  return state;\n}\n\nfunction md51_array(a) {\n  var n = a.length,\n    state = [1732584193, -271733879, -1732584194, 271733878],\n    i,\n    length,\n    tail,\n    tmp,\n    lo,\n    hi;\n\n  for (i = 64; i <= n; i += 64) {\n    md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n  }\n\n  // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n  // containing the last element of the parent array if the sub array specified starts\n  // beyond the length of the parent array - weird.\n  // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n  a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n  length = a.length;\n  tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < length; i += 1) {\n    tail[i >> 2] |= a[i] << ((i % 4) << 3);\n  }\n\n  tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n  if (i > 55) {\n    md5cycle(state, tail);\n    for (i = 0; i < 16; i += 1) {\n      tail[i] = 0;\n    }\n  }\n\n  // Beware that the final length might not fit in 32 bits so we take care of that\n  tmp = n * 8;\n  tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n  lo = parseInt(tmp[2], 16);\n  hi = parseInt(tmp[1], 16) || 0;\n\n  tail[14] = lo;\n  tail[15] = hi;\n\n  md5cycle(state, tail);\n\n  return state;\n}\n\nfunction rhex(n) {\n  var s = '',\n    j;\n  for (j = 0; j < 4; j += 1) {\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n  }\n  return s;\n}\n\nfunction hex(x) {\n  var i;\n  for (i = 0; i < x.length; i += 1) {\n    x[i] = rhex(x[i]);\n  }\n  return x.join('');\n}\n\n// In some cases the fast add32 function cannot be used..\nif (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n  add32 = function (x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n      msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n  };\n}\n\n// ---------------------------------------------------\n\n/**\n * ArrayBuffer slice polyfill.\n *\n * @see https://github.com/ttaubert/node-arraybuffer-slice\n */\n\nif (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n  (function () {\n    function clamp(val, length) {\n      val = (val | 0) || 0;\n\n      if (val < 0) {\n        return Math.max(val + length, 0);\n      }\n\n      return Math.min(val, length);\n    }\n\n    ArrayBuffer.prototype.slice = function (from, to) {\n      var length = this.byteLength,\n        begin = clamp(from, length),\n        end = length,\n        num,\n        target,\n        targetArray,\n        sourceArray;\n\n      if (to !== undefined) {\n        end = clamp(to, length);\n      }\n\n      if (begin > end) {\n        return new ArrayBuffer(0);\n      }\n\n      num = end - begin;\n      target = new ArrayBuffer(num);\n      targetArray = new Uint8Array(target);\n\n      sourceArray = new Uint8Array(this, begin, num);\n      targetArray.set(sourceArray);\n\n      return target;\n    };\n  })();\n}\n\n// ---------------------------------------------------\n\n/**\n * Helpers.\n */\n\nfunction toUtf8(str) {\n  if (/[\\u0080-\\uFFFF]/.test(str)) {\n    str = unescape(encodeURIComponent(str));\n  }\n\n  return str;\n}\n\nfunction utf8Str2ArrayBuffer(str, returnUInt8Array) {\n  var length = str.length,\n    buff = new ArrayBuffer(length),\n    arr = new Uint8Array(buff),\n    i;\n\n  for (i = 0; i < length; i += 1) {\n    arr[i] = str.charCodeAt(i);\n  }\n\n  return returnUInt8Array ? arr : buff;\n}\n\nfunction arrayBuffer2Utf8Str(buff) {\n  return String.fromCharCode.apply(null, new Uint8Array(buff));\n}\n\nfunction concatenateArrayBuffers(first, second, returnUInt8Array) {\n  var result = new Uint8Array(first.byteLength + second.byteLength);\n\n  result.set(new Uint8Array(first));\n  result.set(new Uint8Array(second), first.byteLength);\n\n  return returnUInt8Array ? result : result.buffer;\n}\n\nfunction hexToBinaryString(hex) {\n  var bytes = [],\n    length = hex.length,\n    x;\n\n  for (x = 0; x < length - 1; x += 2) {\n    bytes.push(parseInt(hex.substr(x, 2), 16));\n  }\n\n  return String.fromCharCode.apply(String, bytes);\n}\n\n// ---------------------------------------------------\n\n/**\n * SparkMD5 OOP implementation.\n *\n * Use this class to perform an incremental md5, otherwise use the\n * static methods instead.\n */\n\nfunction SparkMD5() {\n  // call reset to init the instance\n  this.reset();\n}\n\n/**\n * Appends a string.\n * A conversion will be applied if an utf8 string is detected.\n *\n * @param {String} str The string to be appended\n *\n * @return {SparkMD5} The instance itself\n */\nSparkMD5.prototype.append = function (str) {\n  // Converts the string to utf8 bytes if necessary\n  // Then append as binary\n  this.appendBinary(toUtf8(str));\n\n  return this;\n};\n\n/**\n * Appends a binary string.\n *\n * @param {String} contents The binary string to be appended\n *\n * @return {SparkMD5} The instance itself\n */\nSparkMD5.prototype.appendBinary = function (contents) {\n  this._buff += contents;\n  this._length += contents.length;\n\n  var length = this._buff.length,\n    i;\n\n  for (i = 64; i <= length; i += 64) {\n    md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n  }\n\n  this._buff = this._buff.substring(i - 64);\n\n  return this;\n};\n\n/**\n * Finishes the incremental computation, reseting the internal state and\n * returning the result.\n *\n * @param {Boolean} raw True to get the raw string, false to get the hex string\n *\n * @return {String} The result\n */\nSparkMD5.prototype.end = function (raw) {\n  var buff = this._buff,\n    length = buff.length,\n    i,\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ret;\n\n  for (i = 0; i < length; i += 1) {\n    tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n  }\n\n  this._finish(tail, length);\n  ret = hex(this._hash);\n\n  if (raw) {\n    ret = hexToBinaryString(ret);\n  }\n\n  this.reset();\n\n  return ret;\n};\n\n/**\n * Resets the internal state of the computation.\n *\n * @return {SparkMD5} The instance itself\n */\nSparkMD5.prototype.reset = function () {\n  this._buff = '';\n  this._length = 0;\n  this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n  return this;\n};\n\n/**\n * Gets the internal state of the computation.\n *\n * @return {Object} The state\n */\nSparkMD5.prototype.getState = function () {\n  return {\n    buff: this._buff,\n    length: this._length,\n    hash: this._hash\n  };\n};\n\n/**\n * Gets the internal state of the computation.\n *\n * @param {Object} state The state\n *\n * @return {SparkMD5} The instance itself\n */\nSparkMD5.prototype.setState = function (state) {\n  this._buff = state.buff;\n  this._length = state.length;\n  this._hash = state.hash;\n\n  return this;\n};\n\n/**\n * Releases memory used by the incremental buffer and other additional\n * resources. If you plan to use the instance again, use reset instead.\n */\nSparkMD5.prototype.destroy = function () {\n  delete this._hash;\n  delete this._buff;\n  delete this._length;\n};\n\n/**\n * Finish the final calculation based on the tail.\n *\n * @param {Array}  tail   The tail (will be modified)\n * @param {Number} length The length of the remaining buffer\n */\nSparkMD5.prototype._finish = function (tail, length) {\n  var i = length,\n    tmp,\n    lo,\n    hi;\n\n  tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n  if (i > 55) {\n    md5cycle(this._hash, tail);\n    for (i = 0; i < 16; i += 1) {\n      tail[i] = 0;\n    }\n  }\n\n  // Do the final computation based on the tail and length\n  // Beware that the final length may not fit in 32 bits so we take care of that\n  tmp = this._length * 8;\n  tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n  lo = parseInt(tmp[2], 16);\n  hi = parseInt(tmp[1], 16) || 0;\n\n  tail[14] = lo;\n  tail[15] = hi;\n  md5cycle(this._hash, tail);\n};\n\n/**\n * Performs the md5 hash on a string.\n * A conversion will be applied if utf8 string is detected.\n *\n * @param {String}  str The string\n * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n *\n * @return {String} The result\n */\nSparkMD5.hash = function (str, raw) {\n  // Converts the string to utf8 bytes if necessary\n  // Then compute it using the binary function\n  return SparkMD5.hashBinary(toUtf8(str), raw);\n};\n\n/**\n * Performs the md5 hash on a binary string.\n *\n * @param {String}  content The binary string\n * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n *\n * @return {String} The result\n */\nSparkMD5.hashBinary = function (content, raw) {\n  var hash = md51(content),\n    ret = hex(hash);\n\n  return raw ? hexToBinaryString(ret) : ret;\n};\n\n// ---------------------------------------------------\n\n/**\n * SparkMD5 OOP implementation for array buffers.\n *\n * Use this class to perform an incremental md5 ONLY for array buffers.\n */\nSparkMD5.ArrayBuffer = function () {\n  // call reset to init the instance\n  this.reset();\n};\n\n/**\n * Appends an array buffer.\n *\n * @param {ArrayBuffer} arr The array to be appended\n *\n * @return {SparkMD5.ArrayBuffer} The instance itself\n */\nSparkMD5.ArrayBuffer.prototype.append = function (arr) {\n  var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n    length = buff.length,\n    i;\n\n  this._length += arr.byteLength;\n\n  for (i = 64; i <= length; i += 64) {\n    md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n  }\n\n  this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n  return this;\n};\n\n/**\n * Finishes the incremental computation, reseting the internal state and\n * returning the result.\n *\n * @param {Boolean} raw True to get the raw string, false to get the hex string\n *\n * @return {String} The result\n */\nSparkMD5.ArrayBuffer.prototype.end = function (raw) {\n  var buff = this._buff,\n    length = buff.length,\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    i,\n    ret;\n\n  for (i = 0; i < length; i += 1) {\n    tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n  }\n\n  this._finish(tail, length);\n  ret = hex(this._hash);\n\n  if (raw) {\n    ret = hexToBinaryString(ret);\n  }\n\n  this.reset();\n\n  return ret;\n};\n\n/**\n * Resets the internal state of the computation.\n *\n * @return {SparkMD5.ArrayBuffer} The instance itself\n */\nSparkMD5.ArrayBuffer.prototype.reset = function () {\n  this._buff = new Uint8Array(0);\n  this._length = 0;\n  this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n  return this;\n};\n\n/**\n * Gets the internal state of the computation.\n *\n * @return {Object} The state\n */\nSparkMD5.ArrayBuffer.prototype.getState = function () {\n  var state = SparkMD5.prototype.getState.call(this);\n\n  // Convert buffer to a string\n  state.buff = arrayBuffer2Utf8Str(state.buff);\n\n  return state;\n};\n\n/**\n * Gets the internal state of the computation.\n *\n * @param {Object} state The state\n *\n * @return {SparkMD5.ArrayBuffer} The instance itself\n */\nSparkMD5.ArrayBuffer.prototype.setState = function (state) {\n  // Convert string to buffer\n  state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n  return SparkMD5.prototype.setState.call(this, state);\n};\n\nSparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\nSparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n/**\n * Performs the md5 hash on an array buffer.\n *\n * @param {ArrayBuffer} arr The array buffer\n * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n *\n * @return {String} The result\n */\nSparkMD5.ArrayBuffer.hash = function (arr, raw) {\n  var hash = md51_array(new Uint8Array(arr)),\n    ret = hex(hash);\n\n  return raw ? hexToBinaryString(ret) : ret;\n};\n\n\n/**\n * @description 重新包装该方法\n * */\nfunction getFileMd5(options) {\n  var file = options.file;\n  var md5Str;\n  var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\n    // file = this.files[0],\n    chunkSize = 8097152, // Read in chunks of 2MB\n    chunks = Math.ceil(file.size / chunkSize),\n    currentChunk = 0,\n    spark = new SparkMD5.ArrayBuffer(),\n    fileReader = new FileReader();\n\n  fileReader.onload = function (e) {\n    // console.log('read chunk nr', currentChunk + 1, 'of', chunks);\n    spark.append(e.target.result); // Append array buffer\n    currentChunk++;\n    var md5_progress = Math.floor((currentChunk / chunks) * 100);\n    options.progress && options.progress({\n      fileName: file.name,\n      progress: md5_progress\n    });\n    if (currentChunk < chunks) {\n      loadNext();\n    } else {\n      md5Str = spark.end();\n      options.success && options.success({\n        md5: md5Str,\n        msg: 'success'\n      });\n      options.complete && options.complete({\n        result: true\n      });\n      // console.log(md5Str);\n    }\n  };\n\n  fileReader.onerror = function () {\n    options.error && options.error({\n      md5: '',\n      msg: 'error'\n    });\n    options.complete && options.complete({\n      result: false\n    });\n  };\n\n  function loadNext() {\n    var start = currentChunk * chunkSize,\n      end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n    fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\n  }\n\n  loadNext();\n}\n\nexport default getFileMd5;\n"],"sourceRoot":""}