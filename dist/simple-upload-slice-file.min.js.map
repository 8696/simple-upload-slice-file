{"version":3,"sources":["webpack://SimpleUploadSliceFile/webpack/universalModuleDefinition","webpack://SimpleUploadSliceFile/webpack/bootstrap","webpack://SimpleUploadSliceFile/./src/getMd5.js","webpack://SimpleUploadSliceFile/./src/http.js","webpack://SimpleUploadSliceFile/./src/index.js","webpack://SimpleUploadSliceFile/./src/polyfill.js","webpack://SimpleUploadSliceFile/./src/queue.send.js","webpack://SimpleUploadSliceFile/./src/slice.js","webpack://SimpleUploadSliceFile/./src/tool.js","webpack://SimpleUploadSliceFile/./src/upload.js"],"names":["add32","a","b","hex_chr","cmn","q","x","s","t","md5cycle","k","c","d","md5blk","md5blks","i","charCodeAt","md5blk_array","md51","n","length","state","tail","tmp","lo","hi","substring","toString","match","parseInt","md51_array","subarray","Uint8Array","rhex","j","hex","join","y","lsw","msw","ArrayBuffer","prototype","slice","clamp","val","Math","max","min","from","to","byteLength","begin","end","num","target","targetArray","sourceArray","undefined","set","toUtf8","str","test","unescape","encodeURIComponent","utf8Str2ArrayBuffer","returnUInt8Array","buff","arr","arrayBuffer2Utf8Str","String","fromCharCode","apply","concatenateArrayBuffers","first","second","result","buffer","hexToBinaryString","bytes","push","substr","SparkMD5","reset","append","appendBinary","contents","_buff","_length","_hash","raw","ret","_finish","getState","hash","setState","destroy","hashBinary","content","call","getFileMd5","options","file","md5Str","blobSlice","File","mozSlice","webkitSlice","chunkSize","chunks","ceil","size","currentChunk","spark","fileReader","FileReader","onload","e","md5_progress","floor","progress","fileName","name","loadNext","success","md5","msg","complete","onerror","error","start","readAsArrayBuffer","Http","url","formData","Tool","deepClone","headers","fileData","callBack","sliceTryFreq","isCheckMd5Request","delay","nowUploadKey","fieldName","queueSend","queue","order","trySend","maxTrySend","cancelSend","checkMd5Result","httpStatus","lastHttpStatus","response","removeField","tryFreqError","fn","FormData","xhr","XMLHttpRequest","makeRandom","open","key","setRequestHeader","onreadystatechange","readyState","status","sendSuccess","singleSuccess","field","responseText","JSON","parse","Error","sliceSuccess","isSendLoading","send","upload","onprogress","evt","lengthComputable","loaded","module","exports","UploadFile","Object","assign","defineProperty","value","varArgs","TypeError","index","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","setTimeout","console","log","splice","filter","item","Slice","totalSize","chunkSile","chunkLength","slices","_compute","blob","keys","maxPos","charAt","random","Date","getTime","split","pop","query","reg","obj","exec","RegExp","$1","$2","origin","prop","formSleceFile","isSendCheckMd5","datas","files","nodeType","jQuery","FileList","fileKey","getSlice","primordial","allField","progressCallObj","md5CallObj","allSuccessResult","singleFile","singleLoadedTotal","loadedTotalSize","res","is","md5Header","suffix","getFileNameSuffix","resp","stringify","allSuccess","errorMsg"],"mappings":"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","file":"simple-upload-slice-file.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleUploadSliceFile\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleUploadSliceFile\"] = factory();\n\telse\n\t\troot[\"SimpleUploadSliceFile\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/*\r\n * Fastest md5 implementation around (JKM md5).\r\n * Credits: Joseph Myers\r\n *\r\n * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\r\n * @see http://jsperf.com/md5-shootout/7\r\n */\r\n\r\n/* this function is much faster,\r\n  so if possible we use it. Some IEs\r\n  are the only ones I know of that\r\n  need the idiotic second function,\r\n  generated by an if clause.  */\r\nvar add32 = function (a, b) {\r\n        return (a + b) & 0xFFFFFFFF;\r\n    },\r\n    hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n\r\n\r\nfunction cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n}\r\n\r\nfunction md5cycle(x, k) {\r\n    var a = x[0],\r\n        b = x[1],\r\n        c = x[2],\r\n        d = x[3];\r\n\r\n    a += (b & c | ~b & d) + k[0] - 680876936 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[1] - 389564586 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[2] + 606105819 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[4] - 176418897 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[7] - 45705983 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[10] - 42063 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n    a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\r\n    a = (a << 7 | a >>> 25) + b | 0;\r\n    d += (a & b | ~a & c) + k[13] - 40341101 | 0;\r\n    d = (d << 12 | d >>> 20) + a | 0;\r\n    c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\r\n    c = (c << 17 | c >>> 15) + d | 0;\r\n    b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\r\n    b = (b << 22 | b >>> 10) + c | 0;\r\n\r\n    a += (b & d | c & ~d) + k[1] - 165796510 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[11] + 643717713 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[0] - 373897302 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[5] - 701558691 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[10] + 38016083 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[15] - 660478335 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[4] - 405537848 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[9] + 568446438 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[3] - 187363961 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n    a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\r\n    a = (a << 5 | a >>> 27) + b | 0;\r\n    d += (a & c | b & ~c) + k[2] - 51403784 | 0;\r\n    d = (d << 9 | d >>> 23) + a | 0;\r\n    c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\r\n    c = (c << 14 | c >>> 18) + d | 0;\r\n    b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\r\n    b = (b << 20 | b >>> 12) + c | 0;\r\n\r\n    a += (b ^ c ^ d) + k[5] - 378558 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[14] - 35309556 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[7] - 155497632 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[13] + 681279174 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[0] - 358537222 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[3] - 722521979 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[6] + 76029189 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n    a += (b ^ c ^ d) + k[9] - 640364487 | 0;\r\n    a = (a << 4 | a >>> 28) + b | 0;\r\n    d += (a ^ b ^ c) + k[12] - 421815835 | 0;\r\n    d = (d << 11 | d >>> 21) + a | 0;\r\n    c += (d ^ a ^ b) + k[15] + 530742520 | 0;\r\n    c = (c << 16 | c >>> 16) + d | 0;\r\n    b += (c ^ d ^ a) + k[2] - 995338651 | 0;\r\n    b = (b << 23 | b >>> 9) + c | 0;\r\n\r\n    a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n    a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\r\n    a = (a << 6 | a >>> 26) + b | 0;\r\n    d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\r\n    d = (d << 10 | d >>> 22) + a | 0;\r\n    c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\r\n    c = (c << 15 | c >>> 17) + d | 0;\r\n    b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\r\n    b = (b << 21 | b >>> 11) + c | 0;\r\n\r\n    x[0] = a + x[0] | 0;\r\n    x[1] = b + x[1] | 0;\r\n    x[2] = c + x[2] | 0;\r\n    x[3] = d + x[3] | 0;\r\n}\r\n\r\nfunction md5blk(s) {\r\n    var md5blks = [],\r\n        i;\r\n    /* Andy King said do it this way. */\r\n\r\n    for (i = 0; i < 64; i += 4) {\r\n        md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\r\n    }\r\n    return md5blks;\r\n}\r\n\r\nfunction md5blk_array(a) {\r\n    var md5blks = [],\r\n        i;\r\n    /* Andy King said do it this way. */\r\n\r\n    for (i = 0; i < 64; i += 4) {\r\n        md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\r\n    }\r\n    return md5blks;\r\n}\r\n\r\nfunction md51(s) {\r\n    var n = s.length,\r\n        state = [1732584193, -271733879, -1732584194, 271733878],\r\n        i,\r\n        length,\r\n        tail,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    for (i = 64; i <= n; i += 64) {\r\n        md5cycle(state, md5blk(s.substring(i - 64, i)));\r\n    }\r\n    s = s.substring(i - 64);\r\n    length = s.length;\r\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\r\n    }\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(state, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Beware that the final length might not fit in 32 bits so we take care of that\r\n    tmp = n * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n\r\n    md5cycle(state, tail);\r\n    return state;\r\n}\r\n\r\nfunction md51_array(a) {\r\n    var n = a.length,\r\n        state = [1732584193, -271733879, -1732584194, 271733878],\r\n        i,\r\n        length,\r\n        tail,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    for (i = 64; i <= n; i += 64) {\r\n        md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\r\n    }\r\n\r\n    // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\r\n    // containing the last element of the parent array if the sub array specified starts\r\n    // beyond the length of the parent array - weird.\r\n    // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\r\n    a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\r\n\r\n    length = a.length;\r\n    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= a[i] << ((i % 4) << 3);\r\n    }\r\n\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(state, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Beware that the final length might not fit in 32 bits so we take care of that\r\n    tmp = n * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n\r\n    md5cycle(state, tail);\r\n\r\n    return state;\r\n}\r\n\r\nfunction rhex(n) {\r\n    var s = '',\r\n        j;\r\n    for (j = 0; j < 4; j += 1) {\r\n        s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction hex(x) {\r\n    var i;\r\n    for (i = 0; i < x.length; i += 1) {\r\n        x[i] = rhex(x[i]);\r\n    }\r\n    return x.join('');\r\n}\r\n\r\n// In some cases the fast add32 function cannot be used..\r\nif (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\r\n    add32 = function (x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    };\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * ArrayBuffer slice polyfill.\r\n *\r\n * @see https://github.com/ttaubert/node-arraybuffer-slice\r\n */\r\n\r\nif (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\r\n    (function () {\r\n        function clamp(val, length) {\r\n            val = (val | 0) || 0;\r\n\r\n            if (val < 0) {\r\n                return Math.max(val + length, 0);\r\n            }\r\n\r\n            return Math.min(val, length);\r\n        }\r\n\r\n        ArrayBuffer.prototype.slice = function (from, to) {\r\n            var length = this.byteLength,\r\n                begin = clamp(from, length),\r\n                end = length,\r\n                num,\r\n                target,\r\n                targetArray,\r\n                sourceArray;\r\n\r\n            if (to !== undefined) {\r\n                end = clamp(to, length);\r\n            }\r\n\r\n            if (begin > end) {\r\n                return new ArrayBuffer(0);\r\n            }\r\n\r\n            num = end - begin;\r\n            target = new ArrayBuffer(num);\r\n            targetArray = new Uint8Array(target);\r\n\r\n            sourceArray = new Uint8Array(this, begin, num);\r\n            targetArray.set(sourceArray);\r\n\r\n            return target;\r\n        };\r\n    })();\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nfunction toUtf8(str) {\r\n    if (/[\\u0080-\\uFFFF]/.test(str)) {\r\n        str = unescape(encodeURIComponent(str));\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction utf8Str2ArrayBuffer(str, returnUInt8Array) {\r\n    var length = str.length,\r\n        buff = new ArrayBuffer(length),\r\n        arr = new Uint8Array(buff),\r\n        i;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        arr[i] = str.charCodeAt(i);\r\n    }\r\n\r\n    return returnUInt8Array ? arr : buff;\r\n}\r\n\r\nfunction arrayBuffer2Utf8Str(buff) {\r\n    return String.fromCharCode.apply(null, new Uint8Array(buff));\r\n}\r\n\r\nfunction concatenateArrayBuffers(first, second, returnUInt8Array) {\r\n    var result = new Uint8Array(first.byteLength + second.byteLength);\r\n\r\n    result.set(new Uint8Array(first));\r\n    result.set(new Uint8Array(second), first.byteLength);\r\n\r\n    return returnUInt8Array ? result : result.buffer;\r\n}\r\n\r\nfunction hexToBinaryString(hex) {\r\n    var bytes = [],\r\n        length = hex.length,\r\n        x;\r\n\r\n    for (x = 0; x < length - 1; x += 2) {\r\n        bytes.push(parseInt(hex.substr(x, 2), 16));\r\n    }\r\n\r\n    return String.fromCharCode.apply(String, bytes);\r\n}\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * SparkMD5 OOP implementation.\r\n *\r\n * Use this class to perform an incremental md5, otherwise use the\r\n * static methods instead.\r\n */\r\n\r\nfunction SparkMD5() {\r\n    // call reset to init the instance\r\n    this.reset();\r\n}\r\n\r\n/**\r\n * Appends a string.\r\n * A conversion will be applied if an utf8 string is detected.\r\n *\r\n * @param {String} str The string to be appended\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.append = function (str) {\r\n    // Converts the string to utf8 bytes if necessary\r\n    // Then append as binary\r\n    this.appendBinary(toUtf8(str));\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Appends a binary string.\r\n *\r\n * @param {String} contents The binary string to be appended\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.appendBinary = function (contents) {\r\n    this._buff += contents;\r\n    this._length += contents.length;\r\n\r\n    var length = this._buff.length,\r\n        i;\r\n\r\n    for (i = 64; i <= length; i += 64) {\r\n        md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\r\n    }\r\n\r\n    this._buff = this._buff.substring(i - 64);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the incremental computation, reseting the internal state and\r\n * returning the result.\r\n *\r\n * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.prototype.end = function (raw) {\r\n    var buff = this._buff,\r\n        length = buff.length,\r\n        i,\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        ret;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\r\n    }\r\n\r\n    this._finish(tail, length);\r\n    ret = hex(this._hash);\r\n\r\n    if (raw) {\r\n        ret = hexToBinaryString(ret);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Resets the internal state of the computation.\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.reset = function () {\r\n    this._buff = '';\r\n    this._length = 0;\r\n    this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @return {Object} The state\r\n */\r\nSparkMD5.prototype.getState = function () {\r\n    return {\r\n        buff: this._buff,\r\n        length: this._length,\r\n        hash: this._hash\r\n    };\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @param {Object} state The state\r\n *\r\n * @return {SparkMD5} The instance itself\r\n */\r\nSparkMD5.prototype.setState = function (state) {\r\n    this._buff = state.buff;\r\n    this._length = state.length;\r\n    this._hash = state.hash;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Releases memory used by the incremental buffer and other additional\r\n * resources. If you plan to use the instance again, use reset instead.\r\n */\r\nSparkMD5.prototype.destroy = function () {\r\n    delete this._hash;\r\n    delete this._buff;\r\n    delete this._length;\r\n};\r\n\r\n/**\r\n * Finish the final calculation based on the tail.\r\n *\r\n * @param {Array}  tail   The tail (will be modified)\r\n * @param {Number} length The length of the remaining buffer\r\n */\r\nSparkMD5.prototype._finish = function (tail, length) {\r\n    var i = length,\r\n        tmp,\r\n        lo,\r\n        hi;\r\n\r\n    tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n    if (i > 55) {\r\n        md5cycle(this._hash, tail);\r\n        for (i = 0; i < 16; i += 1) {\r\n            tail[i] = 0;\r\n        }\r\n    }\r\n\r\n    // Do the final computation based on the tail and length\r\n    // Beware that the final length may not fit in 32 bits so we take care of that\r\n    tmp = this._length * 8;\r\n    tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n    lo = parseInt(tmp[2], 16);\r\n    hi = parseInt(tmp[1], 16) || 0;\r\n\r\n    tail[14] = lo;\r\n    tail[15] = hi;\r\n    md5cycle(this._hash, tail);\r\n};\r\n\r\n/**\r\n * Performs the md5 hash on a string.\r\n * A conversion will be applied if utf8 string is detected.\r\n *\r\n * @param {String}  str The string\r\n * @param {Boolean} [raw] True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.hash = function (str, raw) {\r\n    // Converts the string to utf8 bytes if necessary\r\n    // Then compute it using the binary function\r\n    return SparkMD5.hashBinary(toUtf8(str), raw);\r\n};\r\n\r\n/**\r\n * Performs the md5 hash on a binary string.\r\n *\r\n * @param {String}  content The binary string\r\n * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.hashBinary = function (content, raw) {\r\n    var hash = md51(content),\r\n        ret = hex(hash);\r\n\r\n    return raw ? hexToBinaryString(ret) : ret;\r\n};\r\n\r\n// ---------------------------------------------------\r\n\r\n/**\r\n * SparkMD5 OOP implementation for array buffers.\r\n *\r\n * Use this class to perform an incremental md5 ONLY for array buffers.\r\n */\r\nSparkMD5.ArrayBuffer = function () {\r\n    // call reset to init the instance\r\n    this.reset();\r\n};\r\n\r\n/**\r\n * Appends an array buffer.\r\n *\r\n * @param {ArrayBuffer} arr The array to be appended\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.append = function (arr) {\r\n    var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\r\n        length = buff.length,\r\n        i;\r\n\r\n    this._length += arr.byteLength;\r\n\r\n    for (i = 64; i <= length; i += 64) {\r\n        md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\r\n    }\r\n\r\n    this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the incremental computation, reseting the internal state and\r\n * returning the result.\r\n *\r\n * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.ArrayBuffer.prototype.end = function (raw) {\r\n    var buff = this._buff,\r\n        length = buff.length,\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        i,\r\n        ret;\r\n\r\n    for (i = 0; i < length; i += 1) {\r\n        tail[i >> 2] |= buff[i] << ((i % 4) << 3);\r\n    }\r\n\r\n    this._finish(tail, length);\r\n    ret = hex(this._hash);\r\n\r\n    if (raw) {\r\n        ret = hexToBinaryString(ret);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Resets the internal state of the computation.\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.reset = function () {\r\n    this._buff = new Uint8Array(0);\r\n    this._length = 0;\r\n    this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @return {Object} The state\r\n */\r\nSparkMD5.ArrayBuffer.prototype.getState = function () {\r\n    var state = SparkMD5.prototype.getState.call(this);\r\n\r\n    // Convert buffer to a string\r\n    state.buff = arrayBuffer2Utf8Str(state.buff);\r\n\r\n    return state;\r\n};\r\n\r\n/**\r\n * Gets the internal state of the computation.\r\n *\r\n * @param {Object} state The state\r\n *\r\n * @return {SparkMD5.ArrayBuffer} The instance itself\r\n */\r\nSparkMD5.ArrayBuffer.prototype.setState = function (state) {\r\n    // Convert string to buffer\r\n    state.buff = utf8Str2ArrayBuffer(state.buff, true);\r\n\r\n    return SparkMD5.prototype.setState.call(this, state);\r\n};\r\n\r\nSparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\r\n\r\nSparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\r\n\r\n/**\r\n * Performs the md5 hash on an array buffer.\r\n *\r\n * @param {ArrayBuffer} arr The array buffer\r\n * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\r\n *\r\n * @return {String} The result\r\n */\r\nSparkMD5.ArrayBuffer.hash = function (arr, raw) {\r\n    var hash = md51_array(new Uint8Array(arr)),\r\n        ret = hex(hash);\r\n\r\n    return raw ? hexToBinaryString(ret) : ret;\r\n};\r\n\r\n\r\n/**\r\n * @description 重新包装该方法\r\n * */\r\nfunction getFileMd5(options) {\r\n    var file = options.file;\r\n    var md5Str;\r\n    var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\r\n        // file = this.files[0],\r\n        chunkSize = 8097152, // Read in chunks of 2MB\r\n        chunks = Math.ceil(file.size / chunkSize),\r\n        currentChunk = 0,\r\n        spark = new SparkMD5.ArrayBuffer(),\r\n        fileReader = new FileReader();\r\n\r\n    fileReader.onload = function (e) {\r\n        // console.log('read chunk nr', currentChunk + 1, 'of', chunks);\r\n        spark.append(e.target.result); // Append array buffer\r\n        currentChunk++;\r\n        var md5_progress = Math.floor((currentChunk / chunks) * 100);\r\n        options.progress && options.progress({\r\n            fileName: file.name,\r\n            progress: md5_progress\r\n        });\r\n        if (currentChunk < chunks) {\r\n            loadNext();\r\n        } else {\r\n            md5Str = spark.end();\r\n            options.success && options.success({\r\n                md5: md5Str,\r\n                msg: 'success'\r\n            });\r\n            options.complete && options.complete({\r\n                result: true\r\n            });\r\n            // console.log(md5Str);\r\n        }\r\n    };\r\n\r\n    fileReader.onerror = function () {\r\n        options.error && options.error({\r\n            md5: '',\r\n            msg: 'error'\r\n        });\r\n        options.complete && options.complete({\r\n            result: false\r\n        });\r\n    };\r\n\r\n    function loadNext() {\r\n        var start = currentChunk * chunkSize,\r\n            end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\r\n        fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\r\n    }\r\n\r\n    loadNext();\r\n}\r\n\r\nexport default getFileMd5;","\r\n\r\nimport queueSend from './queue.send';\r\nimport Tool from './tool';\r\n\r\nclass Http {\r\n\r\n    constructor(options) {\r\n        this.url = options.url;\r\n        this.formData = Tool.deepClone(options.formData, {});\r\n        this.headers = Tool.deepClone(options.headers || {}, {});\r\n        this.fileData = options.fileData || {};\r\n        this.callBack = options.callBack || {};\r\n        this.sliceTryFreq = options.sliceTryFreq;\r\n        this.isCheckMd5Request = options.isCheckMd5Request || false;\r\n        this.delay = options.delay;\r\n    }\r\n\r\n\r\n    send() {\r\n        let nowUploadKey = null;\r\n        if (this.fileData.fieldName) {\r\n            // 当前发送的key\r\n            nowUploadKey = this.fileData.fieldName;\r\n        }\r\n\r\n\r\n        // 追加到队列\r\n        queueSend.queue.push({\r\n            delay: this.delay,\r\n            // 本次请求切片所属字段\r\n            fieldName: this.fileData.fieldName,\r\n            // 本次请求切片在文件的第几块\r\n            order: this.fileData.order || '',\r\n            trySend: 0,\r\n            // 最大限度每个切片允许上传失败次数\r\n            maxTrySend: this.sliceTryFreq,\r\n            isCheckMd5Request: this.isCheckMd5Request,\r\n            cancelSend: (isCheckMd5Request) => {\r\n                if (isCheckMd5Request) {\r\n                    this.callBack.checkMd5Result &&\r\n                    this.callBack.checkMd5Result({\r\n                        httpStatus: queueSend.lastHttpStatus,\r\n                        response: null\r\n                    });\r\n\r\n                } else {\r\n                    // 取消本文件的所以切片上传\r\n                    queueSend.removeField(this.fileData.fieldName);\r\n                    this.callBack.tryFreqError &&\r\n                    this.callBack.tryFreqError({\r\n                        httpStatus: queueSend.lastHttpStatus,\r\n                        fieldName: this.fileData.fieldName, // 字段名称\r\n                        order: this.fileData.order // 在第几块一直失败\r\n                    });\r\n                }\r\n\r\n            },\r\n\r\n            // 队列执行函数\r\n            fn: () => {\r\n                let formData = new FormData();\r\n                let xhr = new XMLHttpRequest();\r\n                //\r\n                let url = this.url;\r\n                if (/\\?/.test(url)) {\r\n                    url = url + '&upload-random=' + Tool.makeRandom();\r\n                } else {\r\n                    url = url + '?upload-random=' + Tool.makeRandom();\r\n                }\r\n                xhr.open('post', url, true);\r\n                // 循环追加数据\r\n                for (let key in this.formData) {\r\n                    formData.append(key, this.formData[key]);\r\n                }\r\n                // 循环追加请求头\r\n                for (let key in this.headers) {\r\n                    xhr.setRequestHeader(key, this.headers[key]);\r\n                }\r\n\r\n                if (nowUploadKey) {\r\n                    // 追加文件\r\n                    formData.append(this.fileData.fieldName/*file key*/,\r\n                        this.fileData['file']['blob']/*blob*/,\r\n                        this.fileData['fileName']/*file name*/);\r\n                }\r\n\r\n\r\n                // 监听状态改变\r\n                xhr.onreadystatechange = () => {\r\n\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        // 返回200，表示一个文件请求成功，通知删除该请求队列\r\n                        queueSend.sendSuccess();\r\n                        this.callBack.singleSuccess && this.callBack.singleSuccess({\r\n                            field: this.fileData.fieldName,\r\n                            status: xhr.status,\r\n                            response: xhr.responseText\r\n                        });\r\n                        try {\r\n                            // 是否是校验md5请求\r\n                            if (this.isCheckMd5Request) {\r\n                                this.callBack.checkMd5Result &&\r\n                                this.callBack.checkMd5Result({\r\n                                    httpStatus: queueSend.lastHttpStatus,\r\n                                    response: typeof xhr.responseText === 'string' ? JSON.parse(xhr.responseText) : xhr.responseText\r\n                                });\r\n                            }\r\n                        } catch (e) {\r\n                            throw new Error(e.toString());\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (xhr.readyState === 4 && xhr.status === 206) {\r\n                        // 返回206，表示一块切片请求成功，通知删除该请求队列\r\n                        queueSend.sendSuccess();\r\n                        this.callBack.sliceSuccess && this.callBack.sliceSuccess({\r\n                            status: xhr.status,\r\n                            response: xhr.responseText\r\n                        });\r\n                    }\r\n                    // 请求完成，继续下一次请求，如果后台报非200 || 206则没有通知上传成功，会继续发送上一次请求\r\n                    if (xhr.readyState === 4) {\r\n                        // 保存最后一次HTTP状态码\r\n                        queueSend.lastHttpStatus = xhr.status;\r\n                        queueSend.isSendLoading = false;\r\n                        queueSend.send();\r\n                    }\r\n\r\n                };\r\n                // 监听进度\r\n                xhr.upload.onprogress = (evt) => {\r\n                    if (evt.lengthComputable) {\r\n\r\n                        // this.callBack.progress && this.callBack.progress(Math.round(evt.loaded / evt.total * 100));\r\n                        this.callBack.progress\r\n                        && this.callBack.progress(\r\n                            {[nowUploadKey]: evt.loaded}\r\n                        );\r\n                    }\r\n                };\r\n                xhr.send(formData);\r\n            }\r\n        });\r\n        queueSend.send();\r\n    }\r\n}\r\n\r\n\r\nexport default Http;\r\n\r\n\r\n\r\n\r\n","import './polyfill';\r\nimport UploadFile from './upload';\r\n\r\n\r\nmodule.exports = UploadFile;\r\n\r\n\r\n","/**\r\n * @description  解决IE不认识 Object.assign 的问题\r\n * @description2 采用自 https://developer.mozilla.org/zh-CN/\r\n * */\r\n\r\nif (typeof Object.assign != 'function') {\r\n    // Must be writable: true, enumerable: false, configurable: true\r\n    Object.defineProperty(Object, \"assign\", {\r\n        value: function assign(target, varArgs) { // .length of function is 2\r\n            'use strict';\r\n            if (target == null) { // TypeError if undefined or null\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n\r\n            var to = Object(target);\r\n\r\n            for (var index = 1; index < arguments.length; index++) {\r\n                var nextSource = arguments[index];\r\n\r\n                if (nextSource != null) { // Skip over if undefined or null\r\n                    for (var nextKey in nextSource) {\r\n                        // Avoid bugs when hasOwnProperty is shadowed\r\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                            to[nextKey] = nextSource[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return to;\r\n        },\r\n        writable: true,\r\n        configurable: true\r\n    });\r\n}\r\n","\r\n\r\nexport default {\r\n    isSendLoading: false,\r\n    queue: [],\r\n    lastHttpStatus: 0,\r\n    send: function () {\r\n        if (!this.isSendLoading) {\r\n            if (this.queue.length > 0) {\r\n                this.isSendLoading = true;\r\n                setTimeout(() => {\r\n                    this.queue[0].trySend++;\r\n                    // 判断一块切片是否已经超过指定失败数\r\n                    if (this.queue[0].trySend <= this.queue[0].maxTrySend) {\r\n                        this.queue[0].fn();\r\n                    } else {\r\n                        console.log(this.queue[0].isCheckMd5Request);\r\n                        this.queue[0].cancelSend(this.queue[0].isCheckMd5Request/*取消类型，false文件 || true校验MD5*/);\r\n                    }\r\n\r\n                }, this.queue[0].delay);\r\n            }\r\n        }\r\n    },\r\n    // 是否发送成功，成功删除上一次队列的请求，否则继续重发\r\n    sendSuccess() {\r\n        this.queue.splice(0, 1);\r\n    },\r\n    // 移除指定字段的所有队列\r\n    removeField(fieldName) {\r\n        this.queue = this.queue.filter(item => {\r\n            return item.fieldName !== fieldName;\r\n        });\r\n        // 继续发送\r\n        this.isSendLoading = false;\r\n        this.send();\r\n    }\r\n};","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Slice {\r\n\r\n\r\n    constructor(options) {\r\n        // 文件\r\n        this.file = options.file;\r\n        // 文件大小\r\n        this.totalSize = this.file.size;\r\n        // 切片大小\r\n        this.chunkSile = options.chunkSile * 1024 * 1024;\r\n        // 需要传输几次\r\n        this.chunkLength = 0;\r\n        // 切片集合\r\n        this.slices = [];\r\n\r\n        // 切片开始位置\r\n        this.start = 0;\r\n        // 切片结束位置\r\n        this.end = 0;\r\n\r\n        this._compute();\r\n    }\r\n\r\n\r\n    /**\r\n     * @description 计算总共需要传输几次\r\n     * @return {Object} this\r\n     * */\r\n    _compute() {\r\n        // console.log('文件总大小' + this.totalSize);\r\n        if (this.totalSize <= this.chunkSile) {\r\n            this.chunkLength = 1;\r\n        } else {\r\n            this.chunkLength = Math.ceil(this.totalSize / this.chunkSile);\r\n        }\r\n        // console.log(this.chunkLength);\r\n    }\r\n\r\n    /**\r\n     * @description 获取该文件对象所以切片\r\n     * @return {Array} 切片集合\r\n     * */\r\n    getSlice() {\r\n        if (this.slices.length !== 0) {\r\n            return this.slices;\r\n        }\r\n        for (let i = 1; i <= this.chunkLength; i++) {\r\n            // 如果是总共传输一次或者最后一次\r\n            if (i === this.chunkLength || this.chunkLength === 1) {\r\n                this.end = this.totalSize;\r\n            } else {\r\n                this.end = i * this.chunkSile;\r\n            }\r\n            // 剪切文件\r\n            let blob = this.file.slice(this.start, this.end);\r\n\r\n            this.slices.push({\r\n                blob,\r\n                order: i,\r\n                start: this.start,\r\n                end: this.end\r\n            });\r\n            this.start = this.end;\r\n        }\r\n        return this.slices;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description 获取当前文件对象的大小\r\n     * @return {Number}\r\n     * */\r\n    getSize() {\r\n        return this.totalSize;\r\n    }\r\n\r\n    /**\r\n     * @description 获取当前文件切片块数\r\n     * @return {Number}\r\n     * */\r\n    getChunkLength() {\r\n        return this.chunkLength;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Slice;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\nclass Tool {\r\n    /**\r\n     * @description 生成随机字符串\r\n     * @return {String}\r\n     * */\r\n    static makeRandom() {\r\n        let keys = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let maxPos = keys.length;\r\n        let str = '';\r\n        for (let i = 0; i < 20; i++) {\r\n            str += keys.charAt(Math.floor(Math.random() * maxPos));\r\n        }\r\n        return str + new Date().getTime();\r\n\r\n    }\r\n\r\n    /**\r\n     * @description 获取文件名后缀\r\n     * @return {String} 文件名称\r\n     * @return {String}\r\n     * */\r\n    static getFileNameSuffix(fileName) {\r\n        return fileName.split('.').pop();\r\n    }\r\n    /**\r\n     * @description 将queryString解析成对象\r\n     * @return {String} queryString\r\n     * @return {Object} 转换之后的对象\r\n     * */\r\n    static queryStringToObj(query) {\r\n        let reg = /([^=&\\s]+)[=\\s]*([^&\\s]*)/g;\r\n        let obj = {};\r\n        while (reg.exec(query)) {\r\n            obj[RegExp.$1] = RegExp.$2;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    static deepClone(origin, target) {\r\n        for (let prop in origin) {\r\n            if (origin.hasOwnProperty(prop)) {\r\n                //判断是原始值还是引用值 并且不包含null(null其实是原始值，但是typeof返回是'object')\r\n                if (typeof origin[prop] === 'object' && Object.prototype.toString.call(origin[prop]) !== '[object Null]') {\r\n                    //判断原始值是对象还是数组\r\n                    target[prop] = Object.prototype.toString.call(origin[prop]) === '[object Array]' ? [] : {};\r\n                    Tool.deepClone(origin[prop], target[prop]);\r\n                } else {\r\n                    //string null undefined number\r\n                    target[prop] = origin[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\r\n\r\n\r\nexport default Tool;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Slice from './slice';\r\n\r\nimport Tool from './tool';\r\n\r\nimport Http from './http';\r\n\r\nimport getFileMd5 from './getMd5';\r\n\r\n\r\nclass UploadFile {\r\n\r\n    constructor(options) {\r\n\r\n        // 切片的大小数\r\n        this.chunkSile = options.chunkSile || 10;\r\n        // 请求地址\r\n        this.url = options.url || 'http://127.0.0.1';\r\n        // 请求数据\r\n        this.formData = {};\r\n        // 请求文件\r\n        this.formSleceFile = [];\r\n\r\n        // 请求头\r\n        this.headers = {};\r\n        // 回调\r\n        this.callBack = options.callBack || {};\r\n        // 一个切片连续上传几次失败直接断开整个文件上传\r\n        this.sliceTryFreq = options.sliceTryFreq || 10;\r\n        // 是否最后发送MD5值进行校验\r\n        this.isSendCheckMd5 = options.isSendCheckMd5 || false;\r\n\r\n        this.delay = options.delay || 0;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求头\r\n     * @param headers {Object} 请求头对象\r\n     * @return {Object} this\r\n     * */\r\n    appendHeader(headers) {\r\n        Object.assign(this.headers, headers);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求携带数据\r\n     * @param datas {Object}\r\n     * @return object this\r\n     * */\r\n    appendData(datas) {\r\n        Object.assign(this.formData, datas);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description 追加请求文件数据\r\n     * @param files {Object}\r\n     * @return object this\r\n     * */\r\n    appendFile(files) {\r\n\r\n        // 将文件集合切片放入本对象fromFile\r\n        for (let key in files) {\r\n            let file = null;\r\n            if (!files[key]) {\r\n                throw new Error('No correct file was selected');\r\n            } else if (files[key].nodeType === 1) {\r\n                file = files[key]['files'][0];\r\n            } else if (typeof jQuery !== 'undefined' && files[key] instanceof jQuery) {\r\n                file = files[key][0]['files'][0];\r\n            } else if (files[key] instanceof FileList) {\r\n                file = files[key][0];\r\n            } else if (files[key] instanceof File) {\r\n                file = files[key];\r\n            }\r\n\r\n            // 实例化切片对象，将文件进行切片、计算等操作\r\n            let slice = new Slice({\r\n                chunkSile: this.chunkSile,\r\n                file: file\r\n            });\r\n\r\n\r\n            // 将文件所有切片存入切片集合\r\n            this.formSleceFile[key] = {\r\n                totalSize: file.size,\r\n                fileName: file['name'],\r\n                // fileKey: Tool.makeRandom() + '.' + Tool.getFileNameSuffix(files[key]['name']),\r\n                fileKey: Tool.makeRandom(),\r\n                slices: slice.getSlice(),\r\n                primordial: file\r\n            };\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    send() {\r\n\r\n        // #a001 上传的所有字段放在数组里面\r\n        let allField = Object.keys(this.formSleceFile);\r\n        // #b001 将进度回调的所有字段名称、回调格式定好\r\n        let progressCallObj = {\r\n            /* fieldName: {\r\n                 totalSize: 0,\r\n                 fileName: '',\r\n                 fileKey: '',\r\n                 chunkLength: 0\r\n             }\r\n             */\r\n        };\r\n\r\n        // #c001 将获取成功的MD5回到\r\n        let md5CallObj = {};\r\n\r\n        // #d001 将每次单文件上传完成的响应存起来\r\n        let allSuccessResult = [];\r\n        // 多文件\r\n        for (let key in this.formSleceFile) {\r\n            // 单个文件\r\n            let singleFile = this.formSleceFile[key],\r\n                // 单个文件总共已经上传的字节\r\n                singleLoadedTotal = 0,\r\n                // 临时记录本次与上次的相隔的大小\r\n                s = 0;\r\n            // 进度回调参数\r\n            progressCallObj[key] = {\r\n                totalSize: singleFile['totalSize'],\r\n                fileName: singleFile['fileName'],\r\n                fileKey: singleFile['fileKey'],\r\n                chunkLength: singleFile['slices'].length,\r\n                loadedTotalSize: 0\r\n            };\r\n            // 获取文件MD5\r\n            md5CallObj[key] = {\r\n                field: key,\r\n                fileKey: singleFile['fileKey'],\r\n                fileName: singleFile['fileName'],\r\n                md5: null\r\n            };\r\n            if (this.isSendCheckMd5) {\r\n                getFileMd5({\r\n                    file: singleFile['primordial'],\r\n                    success: (res) => {\r\n                        // console.log('md5md5md5md5');\r\n                        md5CallObj[key].md5 = res.md5;\r\n                        // 全部获取成功才进行回调\r\n                        let is = true;\r\n                        for (let key in md5CallObj) {\r\n                            if (!md5CallObj[key].md5) {\r\n                                is = false;\r\n                            }\r\n                        }\r\n                        if (is) {\r\n                            this.callBack.getFileMd5 &&\r\n                            this.callBack.getFileMd5(md5CallObj);\r\n                            // 发送md5校验\r\n\r\n                            let md5Header = [];\r\n                            for (let key in md5CallObj) {\r\n                                md5Header.push({\r\n                                    'upload-file-id': md5CallObj[key]['fileKey'],\r\n                                    md5: md5CallObj[key]['md5'],\r\n                                    suffix: Tool.getFileNameSuffix(md5CallObj[key]['fileName'])\r\n                                });\r\n                            }\r\n                            new Http({\r\n                                callBack: {\r\n                                    checkMd5Result: (resp) => {\r\n                                        this.callBack.checkMd5Result &&\r\n                                        this.callBack.checkMd5Result(resp);\r\n                                    }\r\n                                },\r\n                                sliceTryFreq: this.sliceTryFreq,\r\n                                url: this.url,\r\n                                isCheckMd5Request: true,\r\n                                headers: {\r\n                                    'upload-file-md5': JSON.stringify(md5Header)\r\n                                },\r\n                                formData: {\r\n                                    'upload-file-md5': JSON.stringify(md5Header)\r\n                                }\r\n\r\n                            }).send();\r\n                        }\r\n                    },\r\n                    progress(res) {\r\n                        // console.log(res);\r\n                    },\r\n                    complete(res) {\r\n                        // console.log(res);\r\n                    },\r\n                    error: function (res) {\r\n                        // console.log(res);\r\n                    }\r\n                });\r\n            }\r\n\r\n            // 多切片,循环将切片加入请求队列\r\n            for (let i = 0; i < singleFile['slices'].length; i++) {\r\n                // console.log(singleFile['slices'][i]);\r\n                // 与切片上传所需请求头合并\r\n                this.headers = Object.assign(this.headers, {\r\n                    // 该段起始位置-结束位置\r\n                    'upload-size-range': singleFile['slices'][i].start + '-' + singleFile['slices'][i].end,\r\n                    // 总大小\r\n                    'upload-total-size': singleFile.totalSize,\r\n                    // 总共所需上传次数\r\n                    'upload-total-slice': singleFile['slices'].length,\r\n                    // 当前是第几块\r\n                    'upload-now-order': i + 1,\r\n                    // 当前前端上传key\r\n                    'upload-file-id': singleFile['fileKey']\r\n                });\r\n\r\n                new Http({\r\n                    callBack: {\r\n                        // 每个切片实时上传回调\r\n                        progress: progress => {\r\n                            if (singleLoadedTotal === 0) {\r\n                                // 如果第一次为0，直接等于\r\n                                singleLoadedTotal = progress[key];\r\n                            } else {\r\n                                // e加等于本次实时减去上一次结束的\r\n                                singleLoadedTotal += progress[key] - s;\r\n                            }\r\n\r\n                            // #b002 将文件实时上传情况回调\r\n                            progressCallObj[key].loadedTotalSize = singleLoadedTotal;\r\n\r\n                            this.callBack.progress &&\r\n                            /*浏览器打印对象时如果对象未展开，由于对象引用问题，\r\n                            最后展开会导致显示不准确，所以采用深拷贝解决，更利于调试*/\r\n                            this.callBack.progress(Tool.deepClone(progressCallObj, {}));\r\n\r\n                            // 记录上一次结束的\r\n                            s = progress[key];\r\n                        },\r\n                        // 一个文件(全部切片)上传成功回调\r\n                        singleSuccess: resp => {\r\n                            try {\r\n                                this.callBack.singleSuccess &&\r\n                                this.callBack.singleSuccess({\r\n                                    field: resp.field,\r\n                                    response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\r\n                                });\r\n\r\n                                // #d002\r\n                                allSuccessResult.push({\r\n                                    field: resp.field,\r\n                                    response: typeof resp.response === 'string' ? JSON.parse(resp.response) : resp.response\r\n                                });\r\n\r\n                                // #a002 判断是否全部上传完成\r\n                                for (let k = 0; k < allField.length; k++) {\r\n                                    if (key === allField[k]) {\r\n                                        // 上传一个移除\r\n                                        allField.splice(k, 1);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (allField.length === 0) {\r\n                                    // #a003\r\n                                    this.callBack.allSuccess &&\r\n                                    this.callBack.allSuccess(allSuccessResult);\r\n                                }\r\n                            } catch (e) {\r\n                                throw new Error(e.toString());\r\n\r\n                            }\r\n\r\n\r\n                        },\r\n                        // 一块切片上传成功回调\r\n                        sliceSuccess() {\r\n                            // 一块上传完成重置临时记录的大小\r\n                            s = 0;\r\n                        },\r\n                        error(resp) {\r\n                            console.log(resp);\r\n                        },\r\n                        // 某个文件由于某个切片上传连续失败回调\r\n                        tryFreqError: errorMsg => {\r\n\r\n                            this.callBack.tryFreqError &&\r\n                            this.callBack.tryFreqError(errorMsg);\r\n                        }\r\n                    },\r\n                    url: this.url,\r\n                    sliceTryFreq: this.sliceTryFreq,\r\n                    headers: this.headers,\r\n                    formData: this.formData,\r\n                    fileData: {\r\n                        fieldName: key,\r\n                        fileName: singleFile['fileName'],\r\n                        fileKey: singleFile['fileKey'],\r\n                        file: singleFile['slices'][i],\r\n                        order: i\r\n                        //\r\n                        // [key]: {\r\n                        //     fileName: singleFile['fileName'],\r\n                        //     fileKey: singleFile['fileKey'],\r\n                        //     file: singleFile['slices'][i]\r\n                        // }\r\n                    },\r\n                    delay: this.delay\r\n                }).send();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default UploadFile;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}